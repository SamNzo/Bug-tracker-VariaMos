[{"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\index.tsx":"1","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\store.ts":"2","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\App.tsx":"3","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\authSlice.ts":"4","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\bugsSlice.ts":"5","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\usersSlice.ts":"6","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\notificationSlice.ts":"7","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\themeSlice.ts":"8","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\localStorage.ts":"9","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\muiStyles.ts":"10","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customTheme.ts":"11","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\Routes.tsx":"12","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ToastNotification.tsx":"13","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\NavBar.tsx":"14","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\helperFuncs.ts":"15","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\auth.ts":"16","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\notes.ts":"17","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\bugs.ts":"18","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\users.ts":"19","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserMenuMobile.tsx":"20","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserButtonsDesktop.tsx":"21","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\LoginPage.tsx":"22","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\SignupPage.tsx":"23","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotFoundPage.tsx":"24","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsDetailsPage.tsx":"25","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\backendUrl.ts":"26","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customStyles.ts":"27","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DarkModeSwitch.tsx":"28","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\LoadingSpinner.tsx":"29","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\InfoText.tsx":"30","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugForm.tsx":"31","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ConfirmDialog.tsx":"32","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotesCard.tsx":"33","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FormDialog.tsx":"34","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortNotes.ts":"35","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\SortBar.tsx":"36","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\HideOnScroll.tsx":"37","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\CustomDialogTitle.tsx":"38","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NoteForm.tsx":"39","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ErrorBox.tsx":"40","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FilterBar.tsx":"41","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DemoCredsBox.tsx":"42","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortBugs.ts":"43","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\filterBugs.ts":"44","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\data\\demoCreds.ts":"45","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsActionCard.tsx":"46","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsTable.tsx":"47","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsListMobile.tsx":"48","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsMenu.tsx":"49","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsPage.tsx":"50","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminForm.tsx":"51","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminsCard.tsx":"52","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminTable.tsx":"53","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\assignment.ts":"54","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\EmailForm.tsx":"55"},{"size":397,"mtime":1655210140913,"results":"56","hashOfConfig":"57"},{"size":778,"mtime":1655405504455,"results":"58","hashOfConfig":"57"},{"size":1450,"mtime":1656622135223,"results":"59","hashOfConfig":"57"},{"size":4982,"mtime":1656700949112,"results":"60","hashOfConfig":"57"},{"size":11978,"mtime":1656975280918,"results":"61","hashOfConfig":"57"},{"size":3847,"mtime":1656952455995,"results":"62","hashOfConfig":"57"},{"size":1268,"mtime":1655210140925,"results":"63","hashOfConfig":"57"},{"size":560,"mtime":1655210140926,"results":"64","hashOfConfig":"57"},{"size":1017,"mtime":1656700888843,"results":"65","hashOfConfig":"57"},{"size":10020,"mtime":1655449458067,"results":"66","hashOfConfig":"57"},{"size":561,"mtime":1655474909637,"results":"67","hashOfConfig":"57"},{"size":1736,"mtime":1656699516597,"results":"68","hashOfConfig":"57"},{"size":1065,"mtime":1655210140911,"results":"69","hashOfConfig":"57"},{"size":3500,"mtime":1656706518564,"results":"70","hashOfConfig":"57"},{"size":864,"mtime":1655210140933,"results":"71","hashOfConfig":"57"},{"size":1211,"mtime":1656511764482,"results":"72","hashOfConfig":"57"},{"size":1165,"mtime":1656975273705,"results":"73","hashOfConfig":"57"},{"size":1361,"mtime":1656971725783,"results":"74","hashOfConfig":"57"},{"size":1477,"mtime":1656952455989,"results":"75","hashOfConfig":"57"},{"size":3026,"mtime":1656442391717,"results":"76","hashOfConfig":"57"},{"size":3574,"mtime":1656961692847,"results":"77","hashOfConfig":"57"},{"size":4690,"mtime":1656953886523,"results":"78","hashOfConfig":"57"},{"size":7465,"mtime":1656476343579,"results":"79","hashOfConfig":"57"},{"size":752,"mtime":1655210140919,"results":"80","hashOfConfig":"57"},{"size":7631,"mtime":1656946170524,"results":"81","hashOfConfig":"57"},{"size":75,"mtime":1656615475793,"results":"82","hashOfConfig":"57"},{"size":863,"mtime":1655475642525,"results":"83","hashOfConfig":"57"},{"size":1424,"mtime":1655210140907,"results":"84","hashOfConfig":"57"},{"size":437,"mtime":1655210140910,"results":"85","hashOfConfig":"57"},{"size":433,"mtime":1655210140909,"results":"86","hashOfConfig":"57"},{"size":5771,"mtime":1656971553946,"results":"87","hashOfConfig":"57"},{"size":3966,"mtime":1655210140906,"results":"88","hashOfConfig":"57"},{"size":7025,"mtime":1656975749259,"results":"89","hashOfConfig":"57"},{"size":3604,"mtime":1655210140908,"results":"90","hashOfConfig":"57"},{"size":628,"mtime":1655210140935,"results":"91","hashOfConfig":"57"},{"size":1240,"mtime":1655210140910,"results":"92","hashOfConfig":"57"},{"size":349,"mtime":1655210140909,"results":"93","hashOfConfig":"57"},{"size":1703,"mtime":1655210140906,"results":"94","hashOfConfig":"57"},{"size":3803,"mtime":1656975220983,"results":"95","hashOfConfig":"57"},{"size":512,"mtime":1655210140908,"results":"96","hashOfConfig":"57"},{"size":1633,"mtime":1655210140908,"results":"97","hashOfConfig":"57"},{"size":415,"mtime":1655478079232,"results":"98","hashOfConfig":"57"},{"size":2272,"mtime":1655210140934,"results":"99","hashOfConfig":"57"},{"size":594,"mtime":1656415888528,"results":"100","hashOfConfig":"57"},{"size":103,"mtime":1655210140913,"results":"101","hashOfConfig":"57"},{"size":5860,"mtime":1656516102248,"results":"102","hashOfConfig":"57"},{"size":3343,"mtime":1656387594083,"results":"103","hashOfConfig":"57"},{"size":3682,"mtime":1656422365414,"results":"104","hashOfConfig":"57"},{"size":6034,"mtime":1656972833188,"results":"105","hashOfConfig":"57"},{"size":3560,"mtime":1656437367761,"results":"106","hashOfConfig":"57"},{"size":10695,"mtime":1656948898948,"results":"107","hashOfConfig":"57"},{"size":2071,"mtime":1656951887585,"results":"108","hashOfConfig":"57"},{"size":2768,"mtime":1656013868452,"results":"109","hashOfConfig":"57"},{"size":454,"mtime":1656353145490,"results":"110","hashOfConfig":"57"},{"size":6055,"mtime":1656954064105,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1632vv6",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"114"},"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\index.tsx",[],["235","236"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\store.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\App.tsx",["237"],"import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { autoLogin } from './redux/slices/authSlice';\r\nimport { selectThemeState, toggleDarkMode } from './redux/slices/themeSlice';\r\nimport NavBar from './components/NavBar';\r\nimport Routes from './Routes';\r\nimport ToastNotification from './components/ToastNotification';\r\nimport storage from './utils/localStorage';\r\n\r\nimport customTheme from './styles/customTheme';\r\nimport { useBodyStyles } from './styles/muiStyles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { selectUsersState } from './redux/slices/usersSlice';/*\r\nimport { User } from '../../server/src/entity/User';*/\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const { darkMode } = useSelector(selectThemeState);\r\n  const classes = useBodyStyles(darkMode)();\r\n\r\n  useEffect(() => {\r\n    dispatch(autoLogin());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadedDarkMode = storage.loadDarkMode();\r\n    if (loadedDarkMode && !darkMode) {\r\n      dispatch(toggleDarkMode());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={customTheme(darkMode)}>\r\n      <div className={classes.root}>\r\n        <NavBar />\r\n        <Routes />\r\n        <ToastNotification />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\authSlice.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\bugsSlice.ts",["238","239"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\usersSlice.ts",["240"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../store';\r\nimport userService from '../../services/users';\r\nimport { SettingsPayload, InviteAdminPayload, User } from '../types';\r\nimport { notify } from './notificationSlice';\r\nimport { getErrorMsg } from '../../utils/helperFuncs';\r\nimport { string } from 'yup';\r\n\r\ninterface InitialBugState {\r\n  users: User[];\r\n  status: 'idle' | 'loading' | 'succeeded';\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: InitialBugState = {\r\n  users: [],\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    setUsers: (state, action: PayloadAction<User[]>) => {\r\n      state.users = action.payload;\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    },\r\n    setUsersLoading: (state) => {\r\n      state.status = 'loading';\r\n      state.error = null;\r\n    },\r\n    addAdmin: (state, action: PayloadAction<{ admins: string }>) => {\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    },\r\n    removeAdministrator: (state, action: PayloadAction<{ adminId: string }>) => {\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    },\r\n    ChangeSettings: (state, action: PayloadAction<{ data: SettingsPayload; userId: string }>) => {\r\n      state.users = state.users.map((u) => u.id === action.payload.userId ? {...u, ...action.payload.data } : u\r\n      );\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setUsers, setUsersLoading, addAdmin, removeAdministrator, ChangeSettings } = usersSlice.actions;\r\n\r\nexport const fetchUsers = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setUsersLoading());\r\n      const allUsers = await userService.getUsers();\r\n      dispatch(setUsers(allUsers));\r\n    } catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addAdmins = (\r\n  admins: string[],\r\n  closeDialog?: () => void\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newAdmins = await userService.addAdmins(admins);\r\n      dispatch(addAdmin({ admins: newAdmins }));\r\n      dispatch(notify('New admin(s) added!', 'success'));\r\n      closeDialog && closeDialog();\r\n    }\r\n    catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const inviteAdmin = (\r\n  data: InviteAdminPayload,\r\n  closeDialog?: () => void\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newAdmin = await userService.inviteAdmin(data);\r\n      dispatch(addAdmin({ admins: newAdmin }));\r\n      dispatch(notify('New admin added! Email was sent successfully!', 'success'));\r\n      closeDialog && closeDialog();\r\n    }\r\n    catch (e) {\r\n    dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const removeAdmin = (\r\n  adminId: string\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await userService.removeAdmin(adminId);\r\n      dispatch(removeAdministrator({ adminId }));\r\n      dispatch(notify('Removed the administrator.', 'success'));\r\n    } catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeSettings = (\r\n  data: SettingsPayload,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedUser: User = await userService.changeSettings(data);\r\n      const userId = updatedUser.id;\r\n      dispatch(ChangeSettings( { data, userId }));\r\n      dispatch(notify('New settings saved!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectUsersState = (state: RootState) => {\r\n  return state.users;\r\n}\r\n\r\nexport default usersSlice.reducer;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\notificationSlice.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\themeSlice.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\localStorage.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\muiStyles.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customTheme.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\Routes.tsx",["241","242","243","244"],"import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport LoginPage from './pages/Auth/LoginPage';\r\nimport SignupPage from './pages/Auth/SignupPage';\r\nimport BugsPage from './pages/Main/BugsPage';\r\nimport BugDetailsPage from './pages/Main/BugsDetailsPage';\r\nimport NotFoundPage from './pages/Main/NotFoundPage';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAuthState } from './redux/slices/authSlice';\r\nimport storage from './utils/localStorage';\r\n\r\nimport { Container, useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { selectBugsState } from './redux/slices/bugsSlice';\r\nimport { UserState } from './redux/types';\r\nimport { updateShorthandPropertyAssignment } from 'typescript';\r\n\r\nconst Routes = () => {\r\n  const { user } = useSelector(selectAuthState);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const isLoggedIn = storage.loadUser() || user;\r\n\r\n  return (\r\n    <Container disableGutters={isMobile}>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {<BugsPage isMobile={false} />}\r\n        </Route>\r\n        <Route exact path=\"/bugs\">\r\n          {<BugsPage isMobile={false} />}\r\n        </Route>\r\n        <Route exact path=\"/bugs/:bugId\">\r\n          <BugDetailsPage />\r\n        </Route>\r\n        <Route exact path=\"/login\">\r\n          {user?.username === \"user\" ? <LoginPage /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route exact path=\"/signup\">\r\n          {user?.username === \"user\" ? <SignupPage /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route>\r\n          <NotFoundPage />\r\n        </Route>\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ToastNotification.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\NavBar.tsx",["245","246"],"import { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectAuthState, logout, login } from '../redux/slices/authSlice';\r\nimport UserButtonsDesktop from './UserButtonsDesktop';\r\nimport UserMenuMobile from './UserMenuMobile';\r\nimport BugIcon from '../svg/bug-logo.svg';\r\nimport { CredentialsPayload } from '../redux/types';\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Link,\r\n  Button,\r\n  useMediaQuery,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useNavStyles } from '../styles/muiStyles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst NavBar = () => {\r\n  const { user } = useSelector(selectAuthState);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n  const classes = useNavStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());/*\r\n    const autoUserCredentials: CredentialsPayload = {\r\n      username: \"user\",\r\n      password: \"pass\",\r\n    };\r\n\r\n    dispatch(login(autoUserCredentials))*/\r\n    //history.push('/');\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    if (pathname.includes('/bugs')) {\r\n      history.push(`${pathname.slice(0, pathname.indexOf('/bugs'))}`);\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  const mainButton = () => {\r\n    if (['/', '/login', '/signup'].includes(pathname) || !pathname.includes('/bugs')) {\r\n      return (\r\n        <div className={classes.logoWrapper}>\r\n          <Button\r\n            className={classes.logoBtn}\r\n            component={RouterLink}\r\n            to=\"/\"\r\n            color=\"secondary\"\r\n          >\r\n            <img src={BugIcon} alt=\"logo\" className={classes.svgImage} />\r\n            VariaMosBugTracker\r\n          </Button>\r\n          {!isMobile && (\r\n            <Typography variant=\"caption\" color=\"secondary\">\r\n              Made with{' '}\r\n              <FavoriteIcon style={{ fontSize: 10 }} color=\"primary\" /> by{' '}\r\n              <Link\r\n                href={'https://github.com/amand33p'}\r\n                color=\"inherit\"\r\n                target=\"_blank\"\r\n                rel=\"noopener\"\r\n              >\r\n                <strong>amand33p</strong>\r\n              </Link>\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          startIcon={<ArrowBackIcon />}\r\n          color=\"secondary\"\r\n          onClick={handleGoBack}\r\n          className={classes.backBtn}\r\n        >\r\n          {pathname.includes('/bugs') ? 'Back to bugs list' : 'Home'}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container disableGutters={isMobile} className={classes.container}>\r\n      <AppBar elevation={1} color=\"inherit\" position=\"static\">\r\n        <Toolbar variant=\"dense\" disableGutters={isMobile}>\r\n          <div className={classes.leftPortion}>{mainButton()}</div>\r\n          <UserButtonsDesktop\r\n            isMobile={isMobile}\r\n            user={user}\r\n            handleLogout={handleLogout}\r\n          />\r\n          <UserMenuMobile\r\n            isMobile={isMobile}\r\n            user={user}\r\n            handleLogout={handleLogout}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\helperFuncs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\auth.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\notes.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\bugs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\users.ts",["247","248"],"import { RepeatOneSharp } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\nimport { EmailPayload, InviteAdminPayload } from '../redux/types';\r\nimport { setConfig } from './auth';\r\n\r\nconst baseUrl = `${backendUrl}/users`;\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst addAdmins = async (admins: string[]) => {\r\n  const response = await axios.post(`${baseUrl}/admins`, { admins }, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\nconst inviteAdmin = async(data: InviteAdminPayload) => {\r\n  const response = await axios.post(`${baseUrl}/inviteAdmin`, { data }, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\nconst removeAdmin = async (adminId: string) => {\r\n  const response = await axios.delete(\r\n    `${baseUrl}/admin/${adminId}`, setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst changeSettings = async (data: EmailPayload) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/email`, data, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\nconst sendNotification = async (adminsIds: string) => {\r\n  console.log(\" id avant la route: \", adminsIds)\r\n  const response = await axios.post(\r\n    `${baseUrl}/sendNotification`, { adminsIds }, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\n\r\nconst userService = { getUsers, addAdmins, inviteAdmin, removeAdmin, changeSettings, sendNotification };\r\n\r\nexport default userService;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserMenuMobile.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserButtonsDesktop.tsx",["249","250","251","252"],"import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { SettingsPayload, UserState } from '../redux/types';\r\nimport DarkModeSwitch from './DarkModeSwitch';\r\n\r\nimport { Button, Avatar, Typography } from '@material-ui/core';\r\nimport { useNavStyles } from '../styles/muiStyles';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport FormDialog from './FormDialog';\r\nimport BugForm from '../pages/Main/BugForm';\r\nimport EmailForm from '../pages/Main/EmailForm';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUsersState } from '../redux/slices/usersSlice';\r\n\r\ninterface UserMenu {\r\n  isMobile: boolean;\r\n  user: UserState | null;\r\n  handleLogout: () => void;\r\n}\r\n\r\nconst UserButtonsDesktop: React.FC<UserMenu> = ({\r\n  isMobile,\r\n  user,\r\n  handleLogout,\r\n}) => {\r\n  const classes = useNavStyles();\r\n  const email = user?.email;\r\n\r\n  let emailExist: boolean = false;\r\n  if (email) {\r\n      emailExist = true;\r\n  }\r\n\r\n  if (isMobile) return null;\r\n\r\n  return (\r\n    <div>\r\n      {user?.username !== \"user\" ? (\r\n        <div className={classes.btnsWrapper}>\r\n          <div className={classes.userInfo}>\r\n            <Avatar className={classes.avatar}>\r\n              {user?.username.slice(0, 1)}\r\n            </Avatar>\r\n            <Typography color=\"secondary\" variant=\"body1\">\r\n              {user?.username}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              className={classes.lastBtn}\r\n              onClick={handleLogout}\r\n              startIcon={<PowerSettingsNewIcon />}\r\n            >\r\n              Log Out\r\n            </Button>\r\n            \r\n          \r\n            <FormDialog\r\n            triggerBtn={\r\n              isMobile\r\n                ? {\r\n                    color: \"secondary\",\r\n                    type: 'fab',\r\n                    variant: 'extended',\r\n                    text: 'Email',\r\n                    icon: SettingsIcon,\r\n                  }\r\n                : {\r\n                    color: \"secondary\",\r\n                    type: 'normal',\r\n                    variant: 'outlined',\r\n                    text: 'Settings',\r\n                    icon: SettingsIcon,\r\n                    size: 'small',\r\n                    style: { marginLeft: '10px' },\r\n                  }\r\n            }\r\n            title=\"Change your personnal settings\"\r\n          >\r\n            <EmailForm emailExist={emailExist} />\r\n          </FormDialog>\r\n        </div>\r\n          <DarkModeSwitch isMobile={isMobile} />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            component={RouterLink}\r\n            to=\"/login\"\r\n            startIcon={<ExitToAppIcon />}\r\n          >\r\n            Log In\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.lastBtn}\r\n            component={RouterLink}\r\n            to=\"/signup\"\r\n            startIcon={<PersonAddIcon />}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <DarkModeSwitch isMobile={isMobile} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserButtonsDesktop;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\LoginPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\SignupPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotFoundPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsDetailsPage.tsx",["253"],"import React from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  selectBugsById,\r\n  deleteBug,\r\n  closeReopenBug,\r\n  selectAllAdmins,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { RootState } from '../../redux/store';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport BugForm from './BugForm';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\nimport NotesCard from './NotesCard';\r\nimport { formatDateTime } from '../../utils/helperFuncs';\r\nimport { priorityStyles, statusStyles } from '../../styles/customStyles';\r\nimport CSS from 'csstype';\r\n\r\nimport { Paper, Typography, Divider, useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport AdminForm from './AdminForm';\r\n\r\ninterface ParamTypes {\r\n  bugId: string;\r\n}\r\n\r\nconst BugsDetailsPage = () => {\r\n  const classes = useMainPageStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const { bugId } = useParams<ParamTypes>();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const bug = useSelector((state: RootState) =>\r\n    selectBugsById(state, bugId)\r\n  );\r\n  const { user } = useSelector(selectAuthState);\r\n  const admins = useSelector(selectAllAdmins);\r\n  \r\n  if (!bug) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.notFoundPaper}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"secondary\"\r\n            className={classes.error404Text}\r\n            style={{ marginTop: '5em' }}\r\n          >\r\n            404: Bug Not Found!\r\n          </Typography>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const {\r\n    id,\r\n    title,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    createdAt,\r\n    updatedBy,\r\n    updatedAt,\r\n    closedBy,\r\n    closedAt,\r\n    reopenedBy,\r\n    reopenedAt,\r\n    notes,\r\n    assignments,\r\n  } = bug;\r\n\r\n  const handleDeleteBug = () => {\r\n    dispatch(deleteBug(bugId, history));\r\n  };\r\n\r\n  const handleCloseBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'close'));\r\n  };\r\n\r\n  const handleReopenBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'reopen'));\r\n  };\r\n\r\n  const statusCSS: CSS.Properties = {\r\n    ...statusStyles(isResolved),\r\n    display: 'inline',\r\n    padding: '0.20em 0.4em',\r\n  };\r\n\r\n  const statusInfo = () => {\r\n    if (!isResolved && reopenedAt && reopenedBy) {\r\n      return (\r\n        <span>\r\n          <div style={statusCSS}>Re-opened</div> -{' '}\r\n          <em>{formatDateTime(reopenedAt)}</em> ~{' '}\r\n          <strong>{reopenedBy.username}</strong>\r\n        </span>\r\n      );\r\n    } else if (isResolved && closedAt && closedBy) {\r\n      return (\r\n        <span>\r\n          <div style={statusCSS}>Closed</div> -{' '}\r\n          <em>{formatDateTime(closedAt)}</em> ~{' '}\r\n          <strong>{closedBy.username}</strong>\r\n        </span>\r\n      );\r\n    } else {\r\n      return <div style={statusCSS}>Open</div>;\r\n    }\r\n  };\r\n\r\n  const closeReopenBtns = () => {\r\n    if (isResolved) {\r\n      return (\r\n        <ConfirmDialog\r\n          title=\"Re-open the Bug\"\r\n          contentText=\"Are you sure you want to re-open the bug?\"\r\n          actionBtnText=\"Re-open Bug\"\r\n          triggerBtn={{\r\n            type: isMobile ? 'round' : 'normal',\r\n            text: 'Re-open Bug',\r\n            icon: RedoIcon,\r\n          }}\r\n          actionFunc={handleReopenBug}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <ConfirmDialog\r\n          title=\"Close the Bug\"\r\n          contentText=\"Are you sure you want to close the bug?\"\r\n          actionBtnText=\"Close Bug\"\r\n          triggerBtn={{\r\n            type: isMobile ? 'round' : 'normal',\r\n            text: 'Close Bug',\r\n            icon: DoneOutlineIcon,\r\n          }}\r\n          actionFunc={handleCloseBug}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const updateBugBtn = () => {\r\n    return (\r\n      <FormDialog\r\n        triggerBtn={{\r\n          type: isMobile ? 'round' : 'normal',\r\n          text: 'Update Bug Info',\r\n          icon: EditOutlinedIcon,\r\n          style: { marginLeft: '1em' },\r\n        }}\r\n        title=\"Edit the bug details\"\r\n      >\r\n        <BugForm\r\n          isEditMode={true}\r\n          bugId={id}\r\n          currentData={{ title, description, priority }}\r\n        />\r\n      </FormDialog>\r\n    );\r\n  };\r\n\r\n  const deleteBugBtn = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        title=\"Confirm Delete Bug\"\r\n        contentText=\"Are you sure you want to permanently delete the bug?\"\r\n        actionBtnText=\"Delete Bug\"\r\n        triggerBtn={{\r\n          type: isMobile ? 'round' : 'normal',\r\n          text: 'Delete Bug',\r\n          icon: DeleteOutlineIcon,\r\n          style: { marginLeft: '1em' },\r\n        }}\r\n        actionFunc={handleDeleteBug}\r\n      />\r\n    );\r\n  };\r\n\r\n  const assignBugBtn = () => {\r\n    return (\r\n      <FormDialog\r\n        triggerBtn={{\r\n          type: isMobile ? 'round' : 'normal',\r\n          text: 'Assign bug',\r\n          icon: EditOutlinedIcon,\r\n          style: { marginLeft: '1em' },\r\n        }}\r\n        title=\"Assign the bug to specific admin(s)\"\r\n      >\r\n        <AdminForm\r\n          editMode=\"assign\"\r\n          currentAdmins={admins.map((a) => a.id)}\r\n          bugId={bugId}\r\n        />\r\n      </FormDialog>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.detailsHeader}>\r\n        <Typography variant={isMobile ? 'h5' : 'h4'} color=\"secondary\">\r\n          <strong>{title}</strong>\r\n        </Typography>\r\n        <Divider style={{ margin: '0.5em 0' }} />\r\n        <Typography color=\"secondary\" variant=\"h6\">\r\n          {description}\r\n        </Typography>\r\n        <Typography\r\n          color=\"secondary\"\r\n          variant=\"subtitle2\"\r\n          className={classes.marginText}\r\n        >\r\n          Status: {statusInfo()}\r\n        </Typography>\r\n        <Typography\r\n          color=\"secondary\"\r\n          variant=\"subtitle2\"\r\n          className={classes.marginText}\r\n        >\r\n          Priority:{' '}\r\n          <div\r\n            style={{\r\n              ...priorityStyles(priority),\r\n              display: 'inline',\r\n              padding: '0.20em 0.4em',\r\n              textTransform: 'capitalize',\r\n            }}\r\n          >\r\n            {priority}\r\n          </div>\r\n        </Typography>\r\n        <Typography color=\"secondary\" variant=\"subtitle2\">\r\n          Created: <em>{formatDateTime(createdAt)}</em> ~{' '}\r\n          <strong>{createdBy.username}</strong>\r\n        </Typography>\r\n        {updatedBy && updatedAt && (\r\n          <Typography color=\"secondary\" variant=\"subtitle2\">\r\n            Updated: <em>{formatDateTime(updatedAt)}</em> ~{' '}\r\n            <strong>{updatedBy.username}</strong>\r\n          </Typography>\r\n        )}\r\n        {user?.isAdmin ? (\r\n        <div className={classes.btnsWrapper}>\r\n          {closeReopenBtns()}\r\n          {updateBugBtn()}\r\n          {deleteBugBtn()}\r\n          {assignBugBtn()}\r\n        </div>\r\n        ) : '' }\r\n      </Paper>\r\n      <NotesCard\r\n        notes={notes}\r\n        bugId={id}\r\n        isMobile={isMobile}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsDetailsPage;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\backendUrl.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customStyles.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DarkModeSwitch.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\InfoText.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugForm.tsx",["254"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ConfirmDialog.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotesCard.tsx",["255"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FormDialog.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortNotes.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\SortBar.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\HideOnScroll.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\CustomDialogTitle.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NoteForm.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ErrorBox.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FilterBar.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DemoCredsBox.tsx",["256"],"import { Alert, AlertTitle } from '@material-ui/lab';\r\nimport demoCreds from '../data/demoCreds';\r\n\r\nconst DemoCredsBox = () => {\r\n  return (\r\n    <div style={{ width: '100%', marginTop: '0.8em', marginBottom: '0.8em' }}>\r\n      <Alert severity=\"info\">\r\n        <AlertTitle>VariaMos Bug Tracker</AlertTitle>\r\n        Login to report your issue\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemoCredsBox;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortBugs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\filterBugs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\data\\demoCreds.ts",[],["257","258"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsActionCard.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsTable.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsListMobile.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsMenu.tsx",["259"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsPage.tsx",["260","261","262","263","264"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchBugs,\r\n  selectBugsByProjectId,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { RootState } from '../../redux/store';\r\nimport BugsTable from './BugsTable';\r\nimport BugsActionCard from './BugsActionCard';\r\nimport BugsListMobile from './BugsListMobile';\r\nimport sortBugs from '../../utils/sortBugs';\r\nimport filterBugs from '../../utils/filterBugs';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\nimport InfoText from '../../components/InfoText';\r\nimport { Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport BugReportOutlinedIcon from '@material-ui/icons/BugReportOutlined';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { selectUsersState } from '../../redux/slices/usersSlice';\r\nimport { BugState } from '../../redux/types';\r\n\r\n\r\nconst BugsPage: React.FC<{ isMobile: boolean }> = ({\r\n  isMobile,\r\n  }) => {\r\n    const classes = useMainPageStyles();\r\n    const dispatch = useDispatch();\r\n    const bugs = useSelector((state: RootState) =>\r\n    selectBugsByProjectId(state)\r\n  );\r\n  const { fetchLoading, fetchError, sortBy, filterBy } = useSelector(\r\n    selectBugsState\r\n  );\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const { user, loading, error } = useSelector(selectAuthState);\r\n  const userId = user?.id;\r\n\r\n  useEffect(() => {\r\n    if (!bugs) {\r\n      dispatch(fetchBugs());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const filteredSortedBugs =\r\n    bugs &&\r\n    sortBugs(\r\n      bugs.filter(\r\n        (b) =>\r\n          b.title.toLowerCase().includes(filterValue.toLowerCase()) &&\r\n          filterBugs(filterBy, b, userId)\r\n      ),\r\n      sortBy\r\n    );\r\n\r\n  const bugsDataToDisplay = () => {\r\n    if (fetchLoading) {\r\n      \r\n      return (\r\n        <LoadingSpinner\r\n          marginTop={isMobile ? '3em' : '4em'}\r\n          size={isMobile ? 60 : 80}\r\n        />\r\n      );\r\n    } else if (fetchError) {\r\n      \r\n      return (\r\n        <InfoText\r\n          text={`Error: ${fetchError}`}\r\n          variant={isMobile ? 'h6' : 'h5'}\r\n        />\r\n      );\r\n    } else if (!bugs || bugs.length === 0) {\r\n      return (\r\n        <InfoText text=\"No Bugs added yet.\" variant={isMobile ? 'h6' : 'h5'} />\r\n      );\r\n    } else if (!filteredSortedBugs || filteredSortedBugs.length === 0) {\r\n      return (\r\n        <InfoText text=\"No matches found.\" variant={isMobile ? 'h6' : 'h5'} />\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {isMobile ? (\r\n            <BugsListMobile bugs={filteredSortedBugs} user={user}/>\r\n          ) : (\r\n            <BugsTable bugs={filteredSortedBugs} user={user}/>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.bugsPaper}>\r\n      <Typography\r\n        variant={isMobile ? 'h6' : 'h5'}\r\n        color=\"secondary\"\r\n        className={classes.flexHeader}\r\n      >\r\n        <BugReportOutlinedIcon\r\n          fontSize={isMobile ? 'default' : 'large'}\r\n          style={{ marginRight: '0.2em' }}\r\n        />\r\n        Bugs\r\n      </Typography>\r\n      <div className={classes.bugsActionCard}>\r\n        <BugsActionCard\r\n          filterValue={filterValue}\r\n          setFilterValue={setFilterValue}\r\n          isMobile={isMobile}\r\n        />\r\n      </div>\r\n      {bugsDataToDisplay()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BugsPage;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminForm.tsx",["265"],"import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { inviteAdmin, selectUsersState } from '../../redux/slices/usersSlice';\r\nimport { InviteAdminPayload, User } from '../../redux/types';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport TitleIcon from '@material-ui/icons/Title';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport { addAdmins } from '../../redux/slices/usersSlice';\r\nimport { assignBugTo } from '../../redux/slices/bugsSlice';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\n\r\ninterface BaseType {\r\n    closeDialog?: () => void;\r\n  }\r\n\r\n  \r\nconst validationSchema = yup.object({\r\n    email: yup.string(),\r\n    login: yup.string()\r\n    });\r\n\r\ninterface MakeAdmin extends BaseType {\r\n    editMode: 'admin' | 'assign';\r\n    currentAdmins: string[];\r\n    bugId?: string;\r\n  }\r\n\r\nconst AdminForm: React.FC<MakeAdmin> = ({\r\n    closeDialog,\r\n    editMode,\r\n    currentAdmins,\r\n    bugId,\r\n}) => {\r\n\r\n    const [select, setSelect]= useState('');\r\n    const classes = useFormStyles();\r\n    const dispatch = useDispatch();\r\n    const { users } = useSelector(selectUsersState);\r\n    const [admins, setAdmins] = useState<string[]>([]);\r\n\r\n    const user = useSelector(selectAuthState).user;\r\n    const AllUsers: User[] = Object.assign([], users);\r\n    const { register, control, handleSubmit, errors } = useForm({\r\n      mode: 'onChange',\r\n      resolver: yupResolver(validationSchema),\r\n      defaultValues: {\r\n        email: '',\r\n        login: '',\r\n      },\r\n    });\r\n\r\n    if (user) {AllUsers.push(user);}\r\n\r\n    const selectAdminsOnChange = (e: any, selectedOption: User[]) => {\r\n        setAdmins(selectedOption.map((s) => s.id));\r\n    };\r\n\r\n    const handleAddAdmins = (e: React.FormEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n\r\n        if (editMode === \"admin\") {\r\n          dispatch(addAdmins(admins, closeDialog));\r\n        }\r\n        else {\r\n          if (bugId) {\r\n            dispatch(assignBugTo(bugId, admins, closeDialog))\r\n          }\r\n        }\r\n    };\r\n\r\n    const handleInviteAdmin = (data: InviteAdminPayload) => {\r\n      dispatch(inviteAdmin(data, closeDialog));\r\n    }\r\n\r\n    const SelectAddAdmin = () => {\r\n      setSelect(\"add\");\r\n    }\r\n\r\n    const SelectInviteAdmin = () => {\r\n      setSelect(\"invite\");\r\n    }\r\n\r\n    return (\r\n        <form\r\n          onSubmit={select === \"invite\" ? handleSubmit(handleInviteAdmin) : handleAddAdmins}\r\n        >\r\n      {select === \"\" && editMode !== 'assign' ? (\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          fullWidth\r\n          className={classes.submitBtn}\r\n          type=\"button\"\r\n          onClick={SelectAddAdmin} \r\n      >\r\n        ADD ADMINISTRATOR (user must already exist)\r\n      </Button>\r\n      ) : '' }\r\n      {select === \"\" && editMode !== 'assign' ? (\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        fullWidth\r\n        className={classes.submitBtn}\r\n        type=\"button\"\r\n        onClick={SelectInviteAdmin}\r\n      >\r\n        INVITE ADMINISTRATOR \r\n      </Button>\r\n      ) : '' }\r\n\r\n          {editMode === \"admin\" && select === \"add\" ? (\r\n            <Autocomplete\r\n              style={{ marginTop: 0 }}\r\n              multiple\r\n              filterSelectedOptions\r\n              onChange={selectAdminsOnChange}\r\n              options={\r\n                users.filter((u) => !currentAdmins?.includes(u.id) && u.username !== \"user\")\r\n              }\r\n              getOptionLabel={(option) => option.username}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  required={editMode === 'admin'}\r\n                  label=\"Select admin(s)\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    startAdornment: (\r\n                      <>\r\n                        <InputAdornment\r\n                          position=\"start\"\r\n                          style={{ paddingLeft: '0.4em' }}\r\n                        >\r\n                          <GroupIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                        {params.InputProps.startAdornment}\r\n                      </>\r\n                    ),\r\n                  }}\r\n                  inputProps={{\r\n                    ...params.inputProps,\r\n                    required: admins.length === 0\r\n                  }}\r\n                />\r\n              )}\r\n              renderOption={(option) => (\r\n                <ListItem dense component=\"div\">\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classes.avatar}>\r\n                      {option.username.slice(0, 1)}\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={option.username}\r\n                    primaryTypographyProps={{\r\n                      color: 'secondary',\r\n                      variant: 'body1',\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              )}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    avatar={<Avatar>{option.username.slice(0, 1)}</Avatar>}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    label={option.username}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n            />\r\n            ) : editMode === 'assign' && \r\n            <Autocomplete\r\n              style={{ marginTop: 0 }}\r\n              multiple\r\n              filterSelectedOptions\r\n              onChange={selectAdminsOnChange}\r\n              options={\r\n                  AllUsers.filter((u) => currentAdmins?.includes(u.id))\r\n              }\r\n              getOptionLabel={(option) => option.username}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  label=\"Select admin(s) to assign the bug to\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    startAdornment: (\r\n                      <>\r\n                        <InputAdornment\r\n                          position=\"start\"\r\n                          style={{ paddingLeft: '0.4em' }}\r\n                        >\r\n                          <GroupIcon color=\"primary\" />\r\n                        </InputAdornment>\r\n                        {params.InputProps.startAdornment}\r\n                      </>\r\n                    ),\r\n                  }}\r\n                  inputProps={{\r\n                    ...params.inputProps,\r\n                    required: admins.length === 0\r\n                  }}\r\n                />\r\n              )}\r\n              renderOption={(option) => (\r\n                <ListItem dense component=\"div\">\r\n                  <ListItemAvatar>\r\n                    <Avatar className={classes.avatar}>\r\n                      {option.username.slice(0, 1)}\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={option.username}\r\n                    primaryTypographyProps={{\r\n                      color: 'secondary',\r\n                      variant: 'body1',\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              )}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    avatar={<Avatar>{option.username.slice(0, 1)}</Avatar>}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    label={option.username}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n            />\r\n          }\r\n          {editMode === \"admin\" && select === \"add\" ? (\r\n          <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            className={classes.submitBtn}\r\n            type=\"submit\"\r\n          >\r\n           Add New Administrators\r\n\r\n          </Button>\r\n          ) : editMode === 'assign' && (\r\n            <Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            className={classes.submitBtn}\r\n            type=\"submit\"\r\n          >\r\n           Assign Bug\r\n\r\n          </Button>\r\n        )}\r\n\r\n        {editMode === \"admin\" && select === \"invite\" ? (\r\n          <><><TextField\r\n            className={classes.fieldMargin}\r\n            inputRef={register}\r\n            name=\"email\"\r\n            required\r\n            fullWidth\r\n            type=\"text\"\r\n            label=\"Email Adress\"\r\n            variant=\"outlined\"\r\n            error={'email' in errors}\r\n            helperText={'email' in errors ? errors.email?.message : ''}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <TitleIcon color=\"primary\" />\r\n                </InputAdornment>\r\n              ),\r\n            }} /><TextField\r\n              className={classes.fieldMargin}\r\n              inputRef={register}\r\n              name=\"login\"\r\n              required\r\n              fullWidth\r\n              type=\"text\"\r\n              label=\"Login\"\r\n              variant=\"outlined\"\r\n              error={'login' in errors}\r\n              helperText={'login' in errors ? errors.login?.message : ''}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <TitleIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }} /></><Button\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                fullWidth\r\n                className={classes.submitBtn}\r\n                type=\"submit\"\r\n              >\r\n              Invite Administrator\r\n\r\n            </Button></>\r\n\r\n        ) : '' }\r\n\r\n        </form>\r\n      );\r\n}\r\n\r\nexport default AdminForm;\r\n\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminsCard.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminTable.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\assignment.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\EmailForm.tsx",["266","267","268"],"import { useForm, Controller } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  clearSubmitBugError,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { BugPayload, SettingsPayload } from '../../redux/types';\r\nimport ErrorBox from '../../components/ErrorBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport {\r\n  TextField,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  FormLabel,\r\n  FormControl,\r\n} from '@material-ui/core';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\nimport TitleIcon from '@material-ui/icons/Title';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { changeSettings } from '../../redux/slices/usersSlice';\r\nimport { useState } from 'react';\r\n\r\ninterface EmailFormProps {\r\n  closeDialog?: () => void;\r\n  emailExist: boolean;\r\n  currentData?: SettingsPayload;\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup.string(),\r\n  });\r\n\r\nconst EmailForm: React.FC<EmailFormProps> = ({\r\n  closeDialog,\r\n  emailExist,\r\n  currentData,\r\n}) => {\r\n\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(selectAuthState);\r\n  const userId = user?.id;\r\n  const { submitError, submitLoading } = useSelector(selectBugsState);\r\n  const [showPass, setShowPass] = useState<boolean>(false);\r\n  const [showConfPass, setShowConfPass] = useState<boolean>(false);\r\n  const { register, control, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: {\r\n      email: user?.email || '',\r\n      notificationsOn: user?.notificationsOn || true,\r\n      newPassword: '',\r\n      oldPassword: '',\r\n    },\r\n  });\r\n\r\n  const handleChangeSettings = (data: SettingsPayload) => {\r\n    dispatch(changeSettings(data, closeDialog));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(handleChangeSettings)}\r\n    >\r\n      <br></br>\r\n      <TextField\r\n        inputRef={register}\r\n        name=\"email\"\r\n        fullWidth\r\n        type=\"text\"\r\n        label=\"New Email adress\"\r\n        variant=\"outlined\"\r\n        error={'email' in errors}\r\n        helperText={'email' in errors ? errors.email?.message : ''}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <TitleIcon color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <TextField\r\n        className={classes.fieldMargin}\r\n        inputRef={register}\r\n        name=\"newPassword\"\r\n        fullWidth\r\n        type={showPass ? 'text' : 'password'}\r\n        label=\"New Password\"\r\n        variant=\"outlined\"\r\n        error={'newPassword' in errors}\r\n        helperText={'newPassword' in errors ? errors.newPassword?.message : ''}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n          ),\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <LockIcon color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <TextField\r\n        className={classes.fieldMargin}\r\n        inputRef={register}\r\n        name=\"oldPassword\"\r\n        fullWidth\r\n        type={showConfPass ? 'text' : 'password'}\r\n        label=\"Old Password\"\r\n        variant=\"outlined\"\r\n        error={'oldPassword' in errors}\r\n        helperText={'oldPassword' in errors ? errors.oldPassword?.message : ''}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowConfPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showConfPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n          ),\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <LockIcon color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        name=\"notifications\"\r\n        as={\r\n          <FormControl className={classes.radioGroupForm}>\r\n            <RadioGroup row className={classes.radioGroup}>\r\n              <FormLabel className={classes.radioGroupLabel}>\r\n                Notifications (On/Off):\r\n              </FormLabel>\r\n              <div className={classes.formControlLabels}>\r\n                <FormControlLabel\r\n                  value=\"on\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"On\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"off\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Off\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        }\r\n      />\r\n      \r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        fullWidth\r\n        className={classes.submitBtn}\r\n        type=\"submit\"\r\n        disabled={submitLoading}\r\n      >\r\n        Change Settings\r\n      </Button>\r\n      {submitError && (\r\n        <ErrorBox\r\n          errorMsg={submitError}\r\n          clearErrorMsg={() => dispatch(clearSubmitBugError())}\r\n        />\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n",{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":13,"column":10,"nodeType":"275","messageId":"276","endLine":13,"endColumn":26},{"ruleId":"273","severity":1,"message":"277","line":21,"column":8,"nodeType":"275","messageId":"276","endLine":21,"endColumn":18},{"ruleId":"273","severity":1,"message":"278","line":22,"column":10,"nodeType":"275","messageId":"276","endLine":22,"endColumn":21},{"ruleId":"273","severity":1,"message":"279","line":7,"column":10,"nodeType":"275","messageId":"276","endLine":7,"endColumn":16},{"ruleId":"273","severity":1,"message":"280","line":13,"column":10,"nodeType":"275","messageId":"276","endLine":13,"endColumn":25},{"ruleId":"273","severity":1,"message":"281","line":14,"column":10,"nodeType":"275","messageId":"276","endLine":14,"endColumn":19},{"ruleId":"273","severity":1,"message":"282","line":15,"column":10,"nodeType":"275","messageId":"276","endLine":15,"endColumn":43},{"ruleId":"273","severity":1,"message":"283","line":21,"column":9,"nodeType":"275","messageId":"276","endLine":21,"endColumn":19},{"ruleId":"273","severity":1,"message":"284","line":3,"column":35,"nodeType":"275","messageId":"276","endLine":3,"endColumn":40},{"ruleId":"273","severity":1,"message":"285","line":7,"column":10,"nodeType":"275","messageId":"276","endLine":7,"endColumn":28},{"ruleId":"273","severity":1,"message":"286","line":1,"column":10,"nodeType":"275","messageId":"276","endLine":1,"endColumn":24},{"ruleId":"273","severity":1,"message":"287","line":20,"column":7,"nodeType":"275","messageId":"276","endLine":20,"endColumn":18},{"ruleId":"273","severity":1,"message":"288","line":3,"column":10,"nodeType":"275","messageId":"276","endLine":3,"endColumn":25},{"ruleId":"273","severity":1,"message":"289","line":13,"column":8,"nodeType":"275","messageId":"276","endLine":13,"endColumn":15},{"ruleId":"273","severity":1,"message":"278","line":15,"column":10,"nodeType":"275","messageId":"276","endLine":15,"endColumn":21},{"ruleId":"273","severity":1,"message":"274","line":16,"column":10,"nodeType":"275","messageId":"276","endLine":16,"endColumn":26},{"ruleId":"273","severity":1,"message":"290","line":78,"column":5,"nodeType":"275","messageId":"276","endLine":78,"endColumn":16},{"ruleId":"273","severity":1,"message":"291","line":23,"column":3,"nodeType":"275","messageId":"276","endLine":23,"endColumn":8},{"ruleId":"273","severity":1,"message":"292","line":6,"column":10,"nodeType":"275","messageId":"276","endLine":6,"endColumn":19},{"ruleId":"273","severity":1,"message":"293","line":2,"column":8,"nodeType":"275","messageId":"276","endLine":2,"endColumn":17},{"ruleId":"269","replacedBy":"294"},{"ruleId":"271","replacedBy":"295"},{"ruleId":"273","severity":1,"message":"296","line":5,"column":22,"nodeType":"275","messageId":"276","endLine":5,"endColumn":26},{"ruleId":"273","severity":1,"message":"297","line":16,"column":29,"nodeType":"275","messageId":"276","endLine":16,"endColumn":42},{"ruleId":"273","severity":1,"message":"274","line":20,"column":10,"nodeType":"275","messageId":"276","endLine":20,"endColumn":26},{"ruleId":"273","severity":1,"message":"298","line":21,"column":10,"nodeType":"275","messageId":"276","endLine":21,"endColumn":18},{"ruleId":"273","severity":1,"message":"299","line":37,"column":17,"nodeType":"275","messageId":"276","endLine":37,"endColumn":24},{"ruleId":"273","severity":1,"message":"300","line":37,"column":26,"nodeType":"275","messageId":"276","endLine":37,"endColumn":31},{"ruleId":"273","severity":1,"message":"301","line":58,"column":23,"nodeType":"275","messageId":"276","endLine":58,"endColumn":30},{"ruleId":"273","severity":1,"message":"302","line":7,"column":10,"nodeType":"275","messageId":"276","endLine":7,"endColumn":20},{"ruleId":"273","severity":1,"message":"303","line":25,"column":8,"nodeType":"275","messageId":"276","endLine":25,"endColumn":19},{"ruleId":"273","severity":1,"message":"304","line":52,"column":9,"nodeType":"275","messageId":"276","endLine":52,"endColumn":15},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"@typescript-eslint/no-unused-vars","'selectUsersState' is defined but never used.","Identifier","unusedVar","'usersSlice' is defined but never used.","'useSelector' is defined but never used.","'string' is defined but never used.","'selectBugsState' is defined but never used.","'UserState' is defined but never used.","'updateShorthandPropertyAssignment' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'login' is defined but never used.","'CredentialsPayload' is defined but never used.","'RepeatOneSharp' is defined but never used.","'inviteAdmin' is assigned a value but never used.","'SettingsPayload' is defined but never used.","'BugForm' is defined but never used.","'assignments' is assigned a value but never used.","'Input' is defined but never used.","'RootState' is defined but never used.","'demoCreds' is defined but never used.",["305"],["306"],"'User' is defined but never used.","'useMediaQuery' is defined but never used.","'BugState' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'control' is assigned a value but never used.","'BugPayload' is defined but never used.","'SubjectIcon' is defined but never used.","'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]