[{"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\index.tsx":"1","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\store.ts":"2","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\App.tsx":"3","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\authSlice.ts":"4","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\bugsSlice.ts":"5","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\usersSlice.ts":"6","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\notificationSlice.ts":"7","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\themeSlice.ts":"8","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\localStorage.ts":"9","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\muiStyles.ts":"10","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customTheme.ts":"11","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\Routes.tsx":"12","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ToastNotification.tsx":"13","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\NavBar.tsx":"14","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\helperFuncs.ts":"15","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\auth.ts":"16","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\notes.ts":"17","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\bugs.ts":"18","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\users.ts":"19","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserMenuMobile.tsx":"20","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserButtonsDesktop.tsx":"21","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\LoginPage.tsx":"22","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\SignupPage.tsx":"23","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotFoundPage.tsx":"24","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsDetailsPage.tsx":"25","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\backendUrl.ts":"26","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customStyles.ts":"27","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DarkModeSwitch.tsx":"28","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\LoadingSpinner.tsx":"29","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\InfoText.tsx":"30","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugForm.tsx":"31","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ConfirmDialog.tsx":"32","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotesCard.tsx":"33","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FormDialog.tsx":"34","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortNotes.ts":"35","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\SortBar.tsx":"36","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\HideOnScroll.tsx":"37","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\CustomDialogTitle.tsx":"38","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NoteForm.tsx":"39","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ErrorBox.tsx":"40","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FilterBar.tsx":"41","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DemoCredsBox.tsx":"42","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortBugs.ts":"43","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\filterBugs.ts":"44","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsActionCard.tsx":"45","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsTable.tsx":"46","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsListMobile.tsx":"47","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsMenu.tsx":"48","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsPage.tsx":"49","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminForm.tsx":"50","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminsCard.tsx":"51","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminTable.tsx":"52","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\assignment.ts":"53","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\EmailForm.tsx":"54","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugCard.tsx":"55","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\InviteVerificationPage.tsx":"56"},{"size":397,"mtime":1655210140913,"results":"57","hashOfConfig":"58"},{"size":778,"mtime":1655405504455,"results":"59","hashOfConfig":"58"},{"size":1394,"mtime":1658338189439,"results":"60","hashOfConfig":"58"},{"size":5495,"mtime":1658177770564,"results":"61","hashOfConfig":"58"},{"size":11993,"mtime":1658263282096,"results":"62","hashOfConfig":"58"},{"size":3799,"mtime":1657919264276,"results":"63","hashOfConfig":"58"},{"size":1268,"mtime":1655210140925,"results":"64","hashOfConfig":"58"},{"size":560,"mtime":1655210140926,"results":"65","hashOfConfig":"58"},{"size":1017,"mtime":1656700888843,"results":"66","hashOfConfig":"58"},{"size":10020,"mtime":1658180509202,"results":"67","hashOfConfig":"58"},{"size":561,"mtime":1655474909637,"results":"68","hashOfConfig":"58"},{"size":1862,"mtime":1658179118205,"results":"69","hashOfConfig":"58"},{"size":1065,"mtime":1655210140911,"results":"70","hashOfConfig":"58"},{"size":2047,"mtime":1658246456096,"results":"71","hashOfConfig":"58"},{"size":864,"mtime":1655210140933,"results":"72","hashOfConfig":"58"},{"size":1504,"mtime":1658161412275,"results":"73","hashOfConfig":"58"},{"size":1165,"mtime":1656975273705,"results":"74","hashOfConfig":"58"},{"size":1361,"mtime":1656971725783,"results":"75","hashOfConfig":"58"},{"size":1477,"mtime":1658182164195,"results":"76","hashOfConfig":"58"},{"size":3026,"mtime":1656442391717,"results":"77","hashOfConfig":"58"},{"size":3574,"mtime":1656961692847,"results":"78","hashOfConfig":"58"},{"size":4709,"mtime":1658159456222,"results":"79","hashOfConfig":"58"},{"size":7901,"mtime":1658178884774,"results":"80","hashOfConfig":"58"},{"size":766,"mtime":1657069499643,"results":"81","hashOfConfig":"58"},{"size":9365,"mtime":1657807788519,"results":"82","hashOfConfig":"58"},{"size":75,"mtime":1656615475793,"results":"83","hashOfConfig":"58"},{"size":863,"mtime":1655475642525,"results":"84","hashOfConfig":"58"},{"size":1424,"mtime":1655210140907,"results":"85","hashOfConfig":"58"},{"size":437,"mtime":1655210140910,"results":"86","hashOfConfig":"58"},{"size":433,"mtime":1655210140909,"results":"87","hashOfConfig":"58"},{"size":5188,"mtime":1658343532642,"results":"88","hashOfConfig":"58"},{"size":3966,"mtime":1655210140906,"results":"89","hashOfConfig":"58"},{"size":7025,"mtime":1658339050224,"results":"90","hashOfConfig":"58"},{"size":3604,"mtime":1655210140908,"results":"91","hashOfConfig":"58"},{"size":628,"mtime":1655210140935,"results":"92","hashOfConfig":"58"},{"size":1240,"mtime":1655210140910,"results":"93","hashOfConfig":"58"},{"size":349,"mtime":1655210140909,"results":"94","hashOfConfig":"58"},{"size":1703,"mtime":1655210140906,"results":"95","hashOfConfig":"58"},{"size":3803,"mtime":1656975220983,"results":"96","hashOfConfig":"58"},{"size":512,"mtime":1655210140908,"results":"97","hashOfConfig":"58"},{"size":1633,"mtime":1655210140908,"results":"98","hashOfConfig":"58"},{"size":785,"mtime":1658159564248,"results":"99","hashOfConfig":"58"},{"size":2272,"mtime":1655210140934,"results":"100","hashOfConfig":"58"},{"size":594,"mtime":1656415888528,"results":"101","hashOfConfig":"58"},{"size":5860,"mtime":1658341284633,"results":"102","hashOfConfig":"58"},{"size":3757,"mtime":1657807999021,"results":"103","hashOfConfig":"58"},{"size":3683,"mtime":1657894003140,"results":"104","hashOfConfig":"58"},{"size":6034,"mtime":1657806128441,"results":"105","hashOfConfig":"58"},{"size":3532,"mtime":1658338288196,"results":"106","hashOfConfig":"58"},{"size":10052,"mtime":1658182718128,"results":"107","hashOfConfig":"58"},{"size":2082,"mtime":1658181019985,"results":"108","hashOfConfig":"58"},{"size":2814,"mtime":1658182653847,"results":"109","hashOfConfig":"58"},{"size":454,"mtime":1656353145490,"results":"110","hashOfConfig":"58"},{"size":6055,"mtime":1656954064105,"results":"111","hashOfConfig":"58"},{"size":849,"mtime":1657807783252,"results":"112","hashOfConfig":"58"},{"size":3629,"mtime":1658342700842,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"xhzvhp",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\index.tsx",[],[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\store.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\App.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\authSlice.ts",["234"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../store';\r\nimport authService from '../../services/auth';\r\nimport storage from '../../utils/localStorage';\r\nimport { CredentialsPayload, InviteCodeData, UserState } from '../types';\r\nimport { notify } from './notificationSlice';\r\nimport { fetchUsers } from './usersSlice';\r\nimport { getErrorMsg } from '../../utils/helperFuncs';\r\nimport { fetchBugs } from './bugsSlice';\r\n\r\n\r\ninterface InitialAuthState {\r\n  user: UserState | null;\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: InitialAuthState = {\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<UserState>) => {\r\n      state.user = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    removeUser: (state) => {\r\n      state.user = null;\r\n    },\r\n    setAuthLoading: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    setAuthError: (state, action: PayloadAction<string>) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    clearAuthError: (state) => {\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setUser,\r\n  removeUser,\r\n  setAuthLoading,\r\n  setAuthError,\r\n  clearAuthError,\r\n} = authSlice.actions;\r\n\r\nexport const login = (credentials: CredentialsPayload): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setAuthLoading());\r\n      const userData = await authService.login(credentials);\r\n      //console.log(\"userdata: \", userData);\r\n      dispatch(setUser(userData));\r\n      storage.saveUser(userData);\r\n      authService.setToken(userData.token);\r\n      authService.setisAdmin(userData.isAdmin);\r\n      authService.setEmail(userData.email);\r\n      authService.setNotifications(userData.notificationsOn);\r\n      //console.log(\"login token: \", userData.token);\r\n      dispatch(fetchBugs());\r\n      dispatch(fetchUsers());\r\n      dispatch(notify(`Welcome back, ${userData.username}!`, 'success'));\r\n    } catch (e: any) {\r\n      dispatch(setAuthError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const signup = (credentials: CredentialsPayload, adminMode: boolean): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setAuthLoading());\r\n      const userData = await authService.signup(credentials, adminMode);\r\n      dispatch(setUser(userData));\r\n      console.log(\"user data\", userData)\r\n      storage.saveUser(userData);\r\n      authService.setToken(userData.token);\r\n      authService.setisAdmin(userData.isAdmin);\r\n      //console.log(\"signup token: \", userData.token);\r\n      dispatch(fetchBugs());\r\n      dispatch(fetchUsers());\r\n      dispatch(\r\n        notify(`Hi, ${userData.username}! Welcome to Bug Tracker :D`, 'success')\r\n      );\r\n    } catch (e: any) {\r\n      dispatch(setAuthError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (): AppThunk => {\r\n  return (dispatch) => {\r\n    dispatch(removeUser());\r\n    storage.removeUser();\r\n    dispatch(autoLogin);\r\n    window.location.reload();\r\n    dispatch(notify('Logged out!', 'success'));\r\n  };\r\n};\r\n\r\nexport const autoLogin = (): AppThunk => {\r\n  return (dispatch) => {\r\n    //alert(\"Auto login\");\r\n    const loggedUser = storage.loadUser();\r\n    // real user\r\n    if (loggedUser) {\r\n      //alert(\"User is still logged\");\r\n      //console.log(\"loggedUser: \", loggedUser);\r\n      dispatch(setUser(loggedUser));\r\n      authService.setToken(loggedUser.token);\r\n      //console.log(\"auto login token: \", loggedUser.token);\r\n      authService.setisAdmin(loggedUser.isAdmin);\r\n      authService.setEmail(loggedUser.email);\r\n      authService.setNotifications(loggedUser.notificationsOn);\r\n      dispatch(fetchBugs());\r\n      dispatch(fetchUsers());\r\n    }\r\n    // auto user ()\r\n    else {\r\n      //alert(\"User is not logged in\")\r\n      // Automatically connect as auto user\r\n      const autoUserToken: string = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCIsInVzZXJuYW1lIjoidXNlciJ9.7lC6scQ1vxLzFKSlZN2_1iGPBy56WYZ05nLPlx8G1eU\"\r\n      const autoUserId: string = \"00000000-0000-0000-0000-000000000000\"\r\n      const autoUserName: string = \"user\"\r\n      const autoUserStringData: string = `{\r\n        \"id\":\"${autoUserId}\",\r\n        \"username\":\"${autoUserName}\",\r\n        \"token\":\"${autoUserToken}\",\r\n        \"isAdmin\":false,\r\n        \"email\":\"\",\r\n        \"notificationsOn\":false\r\n      }`;\r\n\r\n      const autoUser = JSON.parse(autoUserStringData);\r\n      dispatch(setUser(autoUser));\r\n      authService.setToken(autoUser.token);\r\n      authService.setisAdmin(autoUser.isAdmin);\r\n      authService.setEmail(autoUser.email);\r\n      authService.setNotifications(autoUser.notificationsOn);\r\n      dispatch(fetchBugs());\r\n      dispatch(fetchUsers());\r\n      }\r\n    };\r\n};\r\n\r\nexport const verifyCode = async (\r\n  inviteCode: InviteCodeData,\r\n  closeDialog?: () => void,\r\n  ): Promise<boolean> => {\r\n    try {\r\n      await authService.verifyInvitation(inviteCode);\r\n      notify(`Your invitation has been sucessfully validated!`, 'success');\r\n      closeDialog && closeDialog();\r\n      return true;\r\n    } catch (e: any) {\r\n      setAuthError(getErrorMsg(e));\r\n      return false;\r\n    }\r\n  };\r\n//};\r\n\r\nexport const selectAuthState = (state: RootState) => state.auth;\r\n\r\nexport default authSlice.reducer;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\bugsSlice.ts",["235"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../store';\r\nimport bugService from '../../services/bugs';\r\nimport assignmentService from '../../services/assignment';\r\nimport noteService from '../../services/notes';\r\nimport {\r\n  BugState,\r\n  BugSortValues,\r\n  BugPayload,\r\n  EditedBugData,\r\n  ClosedReopenedBugData,\r\n  Note,\r\n  BugFilterValues,\r\n  AssignedAdmins,\r\n  User,\r\n} from '../types';\r\nimport { notify } from './notificationSlice';\r\nimport { History } from 'history';\r\nimport { getErrorMsg } from '../../utils/helperFuncs';\r\nimport userService from '../../services/users';\r\nimport usersSlice from './usersSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\ninterface InitialBugState {\r\n  bugs: BugState[];\r\n  fetchLoading: boolean;\r\n  fetchError: string | null;\r\n  submitLoading: boolean;\r\n  submitError: string | null;\r\n  sortBy: BugSortValues;\r\n  filterBy: BugFilterValues;\r\n}\r\n\r\nconst initialState: InitialBugState = {\r\n  bugs: [],\r\n  fetchLoading: false,\r\n  fetchError: null,\r\n  submitLoading: false,\r\n  submitError: null,\r\n  sortBy: 'newest',\r\n  filterBy: 'all',\r\n};\r\n\r\nconst bugsSlice = createSlice({\r\n  name: 'bugs',\r\n  initialState,\r\n  reducers: {\r\n    setBugs: (\r\n      state,\r\n      action: PayloadAction<BugState[]>\r\n    ) => {\r\n      state.bugs = action.payload;\r\n      state.fetchLoading = false;\r\n      state.fetchError = null;\r\n    },\r\n    addBug: (\r\n      state,\r\n      action: PayloadAction<BugState>\r\n    ) => {\r\n      state.bugs.push(action.payload);\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    updateBug: (\r\n      state,\r\n      action: PayloadAction<{\r\n        data: EditedBugData;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) => b.id === action.payload.bugId ? {...b, ...action.payload.data } : b\r\n      );\r\n\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    removeBug: (\r\n      state,\r\n      action: PayloadAction<string>\r\n    ) => {\r\n      state.bugs = state.bugs.filter((b) => b.id !== action.payload);\r\n    },\r\n    updateBugStatus: (\r\n      state,\r\n      action: PayloadAction<{\r\n        data: ClosedReopenedBugData;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) => b.id === action.payload.bugId ? {...b, ...action.payload.data } : b\r\n      );\r\n    },\r\n    assignBug: (\r\n        state,\r\n        action: PayloadAction<{ assignments: AssignedAdmins[]; bugId: string }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) =>\r\n        b.id === action.payload.bugId\r\n          ? { ...b, assignments: action.payload.assignments }\r\n          : b\r\n      );\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    addNote: (\r\n      state,\r\n      action: PayloadAction<{ note: Note; bugId: string }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) =>\r\n        b.id === action.payload.bugId\r\n          ? { ...b, notes: [...b.notes, action.payload.note] }\r\n          : b\r\n      );\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    updateNote: (\r\n      state,\r\n      action: PayloadAction<{\r\n        data: { body: string; updatedAt: Date };\r\n        noteId: number;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      const bug = state.bugs.find(\r\n        (b) => b.id === action.payload.bugId\r\n      );\r\n\r\n      if (bug) {\r\n        const updatedNotes = bug.notes.map((n) =>\r\n          n.id === action.payload.noteId ? { ...n, ...action.payload.data } : n\r\n        );\r\n\r\n        state.bugs = state.bugs.map((b) =>\r\n          b.id === action.payload.bugId ? { ...b, notes: updatedNotes } : b\r\n        );\r\n\r\n        state.submitLoading = false;\r\n        state.submitError = null;\r\n      }\r\n    },\r\n    removeNote: (\r\n      state,\r\n      action: PayloadAction<{\r\n        noteId: number;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      const bug = state.bugs.find(\r\n        (b) => b.id === action.payload.bugId\r\n      );\r\n\r\n      if (bug) {\r\n        const updatedNotes = bug.notes.filter(\r\n          (n) => n.id !== action.payload.noteId\r\n        );\r\n\r\n        state.bugs = state.bugs.map((b) =>\r\n          b.id === action.payload.bugId ? { ...b, notes: updatedNotes } : b\r\n        );\r\n      }\r\n    },\r\n    setFetchBugsLoading: (state) => {\r\n      state.fetchLoading = true;\r\n      state.fetchError = null;\r\n    },\r\n    setFetchBugsError: (state, action: PayloadAction<string>) => {\r\n      state.fetchLoading = false;\r\n      state.fetchError = action.payload;\r\n    },\r\n\r\n    setSubmitBugLoading: (state) => {\r\n      state.submitLoading = true;\r\n      state.submitError = null;\r\n    },\r\n    setSubmitBugError: (state, action: PayloadAction<string>) => {\r\n      state.submitLoading = false;\r\n      state.submitError = action.payload;\r\n    },\r\n    clearSubmitBugError: (state) => {\r\n      state.submitError = null;\r\n    },\r\n    sortBugsBy: (state, action: PayloadAction<BugSortValues>) => {\r\n      state.sortBy = action.payload;\r\n    },\r\n    filterBugsBy: (state, action: PayloadAction<BugFilterValues>) => {\r\n      state.filterBy = action.payload;\r\n    },\r\n  }\r\n}\r\n)\r\n\r\nexport const {\r\n  setBugs,\r\n  addBug,\r\n  updateBug,\r\n  removeBug,\r\n  updateBugStatus,\r\n  addNote,\r\n  updateNote,\r\n  removeNote,\r\n  setFetchBugsLoading,\r\n  setFetchBugsError,\r\n  setSubmitBugLoading,\r\n  setSubmitBugError,\r\n  clearSubmitBugError,\r\n  sortBugsBy,\r\n  filterBugsBy,\r\n  assignBug,\r\n} = bugsSlice.actions;\r\n\r\nexport const fetchBugs = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      \r\n      dispatch(setFetchBugsLoading());\r\n      \r\n      const allBugs = await bugService.getBugs();\r\n     \r\n      dispatch(setBugs(allBugs));\r\n    } catch (e: any) {\r\n      alert(e)\r\n      dispatch(setFetchBugsError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNewBug = (\r\n  bugData: BugPayload,\r\n  closeDialog?: () => void,\r\n  file?: File\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log(\"file: \", file);\r\n      dispatch(setSubmitBugLoading());\r\n      if (file) {\r\n        const newBug = await bugService.createBug(bugData, file);\r\n        dispatch(addBug(newBug));\r\n      }\r\n      else {\r\n        const newBug = await bugService.createBug(bugData);\r\n        dispatch(addBug(newBug));\r\n      }\r\n      dispatch(notify('New bug added!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const editBug = (\r\n  bugId: string,\r\n  bugData: BugPayload,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      const updatedBug = await bugService.updateBug(bugId, bugData);\r\n      const {\r\n        title,\r\n        description,\r\n        priority,\r\n        updatedAt,\r\n        updatedBy,\r\n      } = updatedBug as EditedBugData;\r\n\r\n      dispatch(\r\n        updateBug({\r\n          data: { title, description, priority, updatedAt, updatedBy },\r\n          bugId,\r\n        })\r\n      );\r\n      dispatch(notify('Successfully updated the bug!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteBug = (\r\n  bugId: string,\r\n  history: History\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await bugService.deleteBug(bugId);\r\n      history.push(`/`);\r\n      dispatch(removeBug(bugId));\r\n      dispatch(notify('Deleted the bug.', 'success'));\r\n    } catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const closeReopenBug = (\r\n  bugId: string,\r\n  action: 'close' | 'reopen'\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let returnedData;\r\n      if (action === 'close') {\r\n        returnedData = await bugService.closeBug(bugId);\r\n      } else {\r\n        returnedData = await bugService.reopenBug(bugId);\r\n      }\r\n      const {\r\n        isResolved,\r\n        closedAt,\r\n        closedBy,\r\n        reopenedAt,\r\n        reopenedBy,\r\n      } = returnedData as ClosedReopenedBugData;\r\n      dispatch(\r\n        updateBugStatus({\r\n          data: { isResolved, closedAt, closedBy, reopenedAt, reopenedBy },\r\n          bugId,\r\n        })\r\n      );\r\n      dispatch(\r\n        notify(\r\n          `${action === 'close' ? 'Closed' : 'Re-opened'} the bug!`,\r\n          'success'\r\n        )\r\n      );\r\n    } catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const assignBugTo = (\r\n  bugId: string,\r\n  admins: string[],\r\n  closeDialog?: () => void\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // return an array with the assignments and the number of new admins assigned\r\n      const AssignmentArray = await assignmentService.assignBug(bugId, admins);\r\n      const Assignments = AssignmentArray[0];\r\n      // array of admins assigned to this bug\r\n      const Admins: User[] = Assignments.map((a: any) => a.admin);\r\n      const nb_admins = AssignmentArray[1];\r\n      dispatch(assignBug({ assignments: Assignments, bugId }));\r\n      // we only want to send a notification to the new assigned admins\r\n      const adminsToSendNotif = Admins.slice(Admins.length - nb_admins);\r\n      const adminsIdsToSendNotif = adminsToSendNotif.map((a: any) => a.id);\r\n      for (let id of adminsIdsToSendNotif) {\r\n        console.log(\"au tour de \", id);\r\n        console.log(typeof(id))\r\n        await userService.sendNotification(id);\r\n      }\r\n      dispatch(notify('Bug assigned!', 'success'));\r\n      closeDialog && closeDialog();\r\n    }\r\n    catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNote = (\r\n  bugId: string,\r\n  noteBody: string,\r\n  isReply: boolean,\r\n  noteId?: number,\r\n  closeDialog?: () => void,\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      if (noteId) {\r\n        const newNote = await noteService.createNote(bugId, noteBody, isReply, noteId);\r\n        dispatch(addNote({ note: newNote, bugId }));\r\n      }\r\n      else {\r\n        const newNote = await noteService.createNote(bugId, noteBody, isReply);\r\n        dispatch(addNote({ note: newNote, bugId }));\r\n      }\r\n      dispatch(notify('New note added!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const editNote = (\r\n  bugId: string,\r\n  noteId: number,\r\n  noteBody: string,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      const returnedData = await noteService.editNote(\r\n        bugId,\r\n        noteId,\r\n        noteBody\r\n      );\r\n      const { body, updatedAt } = returnedData as Note;\r\n      dispatch(\r\n        updateNote({ data: { body, updatedAt }, noteId, bugId })\r\n      );\r\n      dispatch(notify('Updated the note!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteNote = (\r\n  bugId: string,\r\n  noteId: number\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await noteService.deleteNote(bugId, noteId);\r\n      dispatch(removeNote({ noteId, bugId }));\r\n      dispatch(notify('Deleted the note.', 'success'));\r\n    } catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectBugsState = (state: RootState) => state.bugs;\r\n\r\nexport const selectBugsById = (state: RootState, bugId: string) => {\r\n  return state.bugs.bugs.find((b) => b.id === bugId);\r\n};\r\n\r\nexport const selectBugsByProjectId = (state: RootState) => {\r\n  return state.bugs.bugs;\r\n};\r\n\r\nexport const selectAllAdmins = (state: RootState) => {\r\n  return state.users.users.filter((u) => u.isAdmin === true);\r\n};\r\n\r\nexport default bugsSlice.reducer;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\usersSlice.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\notificationSlice.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\themeSlice.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\localStorage.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\muiStyles.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customTheme.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\Routes.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ToastNotification.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\NavBar.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\helperFuncs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\auth.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\notes.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\bugs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\users.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserMenuMobile.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserButtonsDesktop.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\LoginPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\SignupPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotFoundPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsDetailsPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\backendUrl.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customStyles.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DarkModeSwitch.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\InfoText.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugForm.tsx",["236"],"import { useForm, Controller } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  createNewBug,\r\n  editBug,\r\n  clearSubmitBugError,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { BugPayload } from '../../redux/types';\r\nimport ErrorBox from '../../components/ErrorBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport backendUrl from '../../backendUrl';\r\nimport {\r\n  TextField,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Button,\r\n  InputAdornment,\r\n  FormLabel,\r\n  FormControl,\r\n  Input,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\nimport TitleIcon from '@material-ui/icons/Title';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport React from 'react';\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(3, 'Must be at least 3 characters')\r\n    .max(60, 'Must be at most 60 characters'),\r\n\r\n  description: yup.string().required('Required'),\r\n});\r\n\r\ninterface BugFormProps {\r\n  closeDialog?: () => void;\r\n  isEditMode: boolean;\r\n  currentData?: BugPayload;\r\n  bugId?: string;\r\n}\r\n\r\nconst BugForm: React.FC<BugFormProps> = ({\r\n  closeDialog,\r\n  isEditMode,\r\n  currentData,\r\n  bugId,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { submitError, submitLoading } = useSelector(selectBugsState);\r\n\r\n  const { register, control, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: {\r\n      title: currentData?.title || '',\r\n      description: currentData?.description || '',\r\n      priority: currentData?.priority || 'low',\r\n    },\r\n  });\r\n\r\n  const handleCreateBug = async (data: BugPayload) => {\r\n    imageForm?.submit();\r\n    dispatch(createNewBug(data, closeDialog));  \r\n  };\r\n\r\n  const handleUpdateBug = (data: BugPayload) => {\r\n    imageForm?.submit();\r\n    if (typeof(bugId) === \"string\") {\r\n      dispatch(editBug(bugId, data, closeDialog));\r\n    }\r\n  };\r\n\r\n  const imageForm = document.getElementById(\"image-form\") as HTMLFormElement;\r\n\r\n  return (\r\n\r\n    <><form id=\"image-form\" method=\"POST\" action={backendUrl + '/bugs/upload'} encType=\"multipart/form-data\">\r\n      <input type=\"file\" name='image' accept=\"image/*, video/*\"></input>\r\n    </form>\r\n    <br></br>\r\n    <form\r\n      onSubmit={handleSubmit(isEditMode ? handleUpdateBug : handleCreateBug)}\r\n    >\r\n        <TextField\r\n          inputRef={register}\r\n          name=\"title\"\r\n          required\r\n          fullWidth\r\n          type=\"text\"\r\n          label=\"Bug Title\"\r\n          variant=\"outlined\"\r\n          error={'title' in errors}\r\n          helperText={'title' in errors ? errors.title?.message : ''}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <TitleIcon color=\"primary\" />\r\n              </InputAdornment>\r\n            ),\r\n          }} />\r\n        <TextField\r\n          className={classes.fieldMargin}\r\n          multiline\r\n          rows={1}\r\n          rowsMax={4}\r\n          inputRef={register}\r\n          name=\"description\"\r\n          required\r\n          fullWidth\r\n          type=\"text\"\r\n          label=\"Description\"\r\n          variant=\"outlined\"\r\n          error={'description' in errors}\r\n          helperText={'description' in errors ? errors.description?.message : ''}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SubjectIcon color=\"primary\" />\r\n              </InputAdornment>\r\n            ),\r\n          }} />\r\n\r\n        <Controller\r\n          control={control}\r\n          name=\"priority\"\r\n          as={<FormControl className={classes.radioGroupForm}>\r\n            <RadioGroup row defaultValue=\"low\" className={classes.radioGroup}>\r\n              <FormLabel className={classes.radioGroupLabel}>\r\n                Priority:\r\n              </FormLabel>\r\n              <div className={classes.formControlLabels}>\r\n                <FormControlLabel\r\n                  value=\"low\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Low\" />\r\n                <FormControlLabel\r\n                  value=\"medium\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Medium\" />\r\n                <FormControlLabel\r\n                  value=\"high\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"High\" />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>} />\r\n        <Button\r\n          size=\"large\"\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          fullWidth\r\n          className={classes.submitBtn}\r\n          type=\"submit\"\r\n          disabled={submitLoading}\r\n        >\r\n          {isEditMode ? 'Update Bug' : 'Create New Bug'}\r\n        </Button>\r\n        {submitError && (\r\n          <ErrorBox\r\n            errorMsg={submitError}\r\n            clearErrorMsg={() => dispatch(clearSubmitBugError())} />\r\n        )}\r\n      </form></>\r\n\r\n  );\r\n};\r\n\r\nexport default BugForm;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ConfirmDialog.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotesCard.tsx",["237"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { deleteNote } from '../../redux/slices/bugsSlice';\r\nimport { Note } from '../../redux/types';\r\nimport { RootState } from '../../redux/store';\r\nimport SortBar from '../../components/SortBar';\r\nimport sortNotes from '../../utils/sortNotes';\r\nimport NoteForm from './NoteForm';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport InfoText from '../../components/InfoText';\r\nimport { formatTimeAgo } from '../../utils/helperFuncs';\r\n\r\nimport { Paper, Typography, Avatar, Divider } from '@material-ui/core';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\n\r\nexport type NoteSortValues = 'newest' | 'oldest' | 'updated';\r\n\r\nconst menuItems = [\r\n  { value: 'newest', label: 'Newest' },\r\n  { value: 'oldest', label: 'Oldest' },\r\n  { value: 'updated', label: 'Recently Updated' },\r\n];\r\n\r\nconst NotesCard: React.FC<{\r\n  notes: Note[];\r\n  bugId: string;\r\n  isMobile: boolean;\r\n}> = ({ notes, bugId, isMobile }) => {\r\n  const classes = useMainPageStyles();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(selectAuthState);\r\n  const [sortBy, setSortBy] = useState<NoteSortValues>('newest');\r\n\r\n  const handleSortChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSortBy(e.target.value as NoteSortValues);\r\n  };\r\n\r\n  const sortedNotes = sortNotes(notes, sortBy);\r\n\r\n  const handleDeleteNote = (noteId: number) => {\r\n    dispatch(deleteNote(bugId, noteId));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.notesPaper}>\r\n      <div className={classes.flexInput}>\r\n        <Typography\r\n          variant={isMobile ? 'h6' : 'h5'}\r\n          color=\"secondary\"\r\n          className={classes.flexHeader}\r\n        >\r\n          <ForumOutlinedIcon\r\n            fontSize={isMobile ? 'default' : 'large'}\r\n            style={{ marginRight: '0.2em' }}\r\n          />\r\n          Notes\r\n        </Typography>\r\n        <div className={classes.sortNotesInput}>\r\n          <SortBar\r\n            sortBy={sortBy}\r\n            handleSortChange={handleSortChange}\r\n            menuItems={menuItems}\r\n            label=\"Notes\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <FormDialog\r\n        triggerBtn={\r\n          isMobile\r\n            ? { type: 'fab', variant: 'round', icon: CommentOutlinedIcon }\r\n            : {\r\n                type: 'normal',\r\n                text: 'Leave A Note',\r\n                icon: CommentOutlinedIcon,\r\n                size: 'large',\r\n                style: { marginTop: '1em' },\r\n              }\r\n        }\r\n        title=\"Post a note\"\r\n      >\r\n        <NoteForm isReply={false} isEditMode={false} bugId={bugId} />\r\n      </FormDialog>\r\n      <div className={classes.notesWrapper}>\r\n        <Divider />\r\n        {sortedNotes.length === 0 && (\r\n          <InfoText\r\n            text=\"No notes added yet.\"\r\n            variant={isMobile ? 'h6' : 'h5'}\r\n          />\r\n        )}\r\n        {sortedNotes.map((n) => (\r\n          <div key={n.id}>\r\n            <div className={classes.singleNote}>\r\n              <Avatar className={classes.avatar}>\r\n                {n.author.username.slice(0, 1)}\r\n              </Avatar>\r\n              <div>\r\n                <Typography color=\"secondary\" variant=\"caption\">\r\n                  {n.author.username}\r\n                </Typography>\r\n                <Typography color=\"secondary\" variant=\"caption\">\r\n                  <em> • {formatTimeAgo(n.createdAt)} ago</em>\r\n                </Typography>\r\n                {n.updatedAt !== n.createdAt && (\r\n                  <Typography color=\"secondary\" variant=\"caption\">\r\n                    {' '}\r\n                    • updated <em>{formatTimeAgo(n.updatedAt)} ago</em>\r\n                  </Typography>\r\n                )}\r\n                <Typography\r\n                  color=\"secondary\"\r\n                  variant=\"subtitle1\"\r\n                  className={classes.noteBody}\r\n                >\r\n                  {n.body}\r\n                </Typography>\r\n                <div className={classes.notesBtnWrapper}>\r\n                <FormDialog\r\n                  triggerBtn={{\r\n                    type: 'normal',\r\n                    text: 'Reply',\r\n                    icon: ReplyIcon,\r\n                    variant: 'outlined',\r\n                    size: 'small',\r\n                    color: 'secondary',\r\n                    style: { marginRight: '1em' },\r\n                  }}\r\n                  title=\"Reply\"\r\n                >\r\n                  <NoteForm \r\n                    isReply={true}\r\n                    isEditMode={false}\r\n                    bugId={bugId}\r\n                    noteId={n.id}\r\n                    currentBody={n.body}\r\n                  />\r\n                </FormDialog>\r\n                  {((n.author.id === user?.id) && (user?.username !== \"user\")) && (\r\n                    <FormDialog\r\n                      triggerBtn={{\r\n                        type: 'normal',\r\n                        text: 'Edit',\r\n                        icon: EditIcon,\r\n                        variant: 'outlined',\r\n                        size: 'small',\r\n                        style: { marginRight: '1em' },\r\n                        color: 'secondary',\r\n                      }}\r\n                      title=\"Edit the note\"\r\n                    >\r\n                      <NoteForm\r\n                        isReply={false}\r\n                        isEditMode={true}\r\n                        bugId={bugId}\r\n                        noteId={n.id}\r\n                        currentBody={n.body}\r\n                      />\r\n                    </FormDialog>\r\n                  )}\r\n                  {(((n.author.id === user?.id) || (user?.isAdmin)) && (user?.username !== \"user\")) && (\r\n                    <ConfirmDialog\r\n                      title=\"Confirm Delete Note\"\r\n                      contentText=\"Are you sure you want to delete the note?\"\r\n                      actionBtnText=\"Delete Note\"\r\n                      triggerBtn={{\r\n                        type: 'normal',\r\n                        text: 'Delete',\r\n                        icon: DeleteIcon,\r\n                        variant: 'outlined',\r\n                        size: 'small',\r\n                        color: 'secondary',\r\n                      }}\r\n                      actionFunc={() => handleDeleteNote(n.id)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Divider />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default NotesCard;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FormDialog.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortNotes.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\SortBar.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\HideOnScroll.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\CustomDialogTitle.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NoteForm.tsx",["238"],"import { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  createNote,\r\n  editNote,\r\n  clearSubmitBugError,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugsSlice';\r\nimport ErrorBox from '../../components/ErrorBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport { TextField, Button, InputAdornment } from '@material-ui/core';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nconst validationSchema = yup.object({\r\n  body: yup.string().required('Required'),\r\n});\r\n\r\ninterface NoteFormProps {\r\n  closeDialog?: () => void;\r\n  bugId: string;\r\n  isReply: boolean;\r\n  isEditMode: boolean;\r\n  currentBody?: string;\r\n  noteId?: number;\r\n}\r\n\r\nconst NoteForm: React.FC<NoteFormProps> = ({\r\n  closeDialog,\r\n  isReply,\r\n  isEditMode,\r\n  bugId,\r\n  currentBody,\r\n  noteId,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { submitError, submitLoading } = useSelector(selectBugsState);\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: {\r\n      body: currentBody || '',\r\n    },\r\n  });\r\n\r\n  const handleCreateNote = ({ body }: { body: string }) => {\r\n    dispatch(createNote(bugId, body, isReply, noteId, closeDialog));\r\n  };\r\n\r\n  const handleUpdateNote = ({ body }: { body: string }) => {\r\n    dispatch(editNote(bugId, noteId as number, body, closeDialog));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(isEditMode ? handleUpdateNote : handleCreateNote)}\r\n    >\r\n    {!isReply ? (\r\n      <><TextField\r\n          multiline\r\n          rows={1}\r\n          rowsMax={4}\r\n          inputRef={register}\r\n          name=\"body\"\r\n          placeholder=\"Type a note...\"\r\n          required\r\n          fullWidth\r\n          type=\"text\"\r\n          label=\"Note\"\r\n          variant=\"outlined\"\r\n          error={'body' in errors}\r\n          helperText={'body' in errors ? errors.body?.message : ''}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <CommentIcon color=\"primary\" />\r\n              </InputAdornment>\r\n            ),\r\n          }} /><Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            className={classes.submitBtn}\r\n            type=\"submit\"\r\n            disabled={submitLoading}\r\n          >\r\n            {isEditMode ? 'Update Note' : 'Submit Note'}\r\n          </Button></>\r\n    ) : \r\n    \r\n    <><TextField\r\n          multiline\r\n          rows={1}\r\n          rowsMax={4}\r\n          inputRef={register}\r\n          name=\"body\"\r\n          placeholder=\"Type a response...\"\r\n          required\r\n          fullWidth\r\n          type=\"text\"\r\n          label=\"Note\"\r\n          variant=\"outlined\"\r\n          error={'body' in errors}\r\n          helperText={'body' in errors ? errors.body?.message : ''}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <CommentIcon color=\"primary\" />\r\n              </InputAdornment>\r\n            ),\r\n          }} /><Button\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n            className={classes.submitBtn}\r\n            type=\"submit\"\r\n            disabled={submitLoading}\r\n          >\r\n            Submit response\r\n          </Button></>\r\n    \r\n    \r\n    \r\n    }\r\n      {submitError && (\r\n        <ErrorBox\r\n          errorMsg={submitError}\r\n          clearErrorMsg={() => dispatch(clearSubmitBugError())}\r\n        />\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NoteForm;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ErrorBox.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FilterBar.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DemoCredsBox.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortBugs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\filterBugs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsActionCard.tsx",["239"],"import { useDispatch, useSelector } from 'react-redux';\r\nimport FilterBar from '../../components/FilterBar';\r\nimport SortBar from '../../components/SortBar';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport BugForm from './BugForm';/*\r\nimport AdminForm from './AdminForm';*/\r\nimport { BugSortValues, BugFilterValues } from '../../redux/types';\r\nimport {\r\n  sortBugsBy,\r\n  filterBugsBy,\r\n  selectBugsState,\r\n  selectAllAdmins,\r\n} from '../../redux/slices/bugsSlice';\r\n\r\nimport {\r\n  RadioGroup,\r\n  Radio,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { useActionCardStyles } from '../../styles/muiStyles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport AdminForm from './AdminForm';\r\nimport { useState } from 'react';\r\nimport AdminsCard from './AdminsCard';\r\n\r\nconst menuItems = [\r\n  { value: 'newest', label: 'Newest' },\r\n  { value: 'oldest', label: 'Oldest' },\r\n  { value: 'a-z', label: 'Title (A - Z)' },\r\n  { value: 'z-a', label: 'Title (Z - A)' },\r\n  { value: 'h-l', label: 'Priority (High - Low)' },\r\n  { value: 'l-h', label: 'Priority (Low - High)' },\r\n  { value: 'closed', label: 'Recently Closed' },\r\n  { value: 'reopened', label: 'Recently Re-opened' },\r\n  { value: 'updated', label: 'Recently Updated' },\r\n  { value: 'most-notes', label: 'Most Notes' },\r\n  { value: 'least-notes', label: 'Least Notes' },\r\n];\r\n\r\nconst BugsActionCard: React.FC<{\r\n\r\n  filterValue: string;\r\n  setFilterValue: (filterValue: string) => void;\r\n  isMobile: boolean;\r\n}> = ({ filterValue, setFilterValue, isMobile }) => {\r\n  const classes = useActionCardStyles();\r\n  const dispatch = useDispatch();\r\n  const { sortBy, filterBy } = useSelector(selectBugsState);\r\n  const admins = useSelector(selectAllAdmins);\r\n  const { user } = useSelector(selectAuthState);\r\n\r\n  const isAdmin = user?.isAdmin;\r\n  const [viewAdmins, setViewAdmins] = useState(false);\r\n\r\n  const handleSortChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    const selectedValue = e.target.value;\r\n    dispatch(sortBugsBy(selectedValue as BugSortValues));\r\n  };\r\n\r\n  const handleFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedValue = e.target.value as BugFilterValues;\r\n    dispatch(filterBugsBy(selectedValue));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.inputs}>\r\n        <div className={classes.searchBarWrapper}>\r\n          <FilterBar\r\n            filterValue={filterValue}\r\n            setFilterValue={setFilterValue}\r\n            label=\"Bugs\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n        <div className={classes.sortBarWrapper}>\r\n          <SortBar\r\n            sortBy={sortBy}\r\n            handleSortChange={handleSortChange}\r\n            menuItems={menuItems}\r\n            label=\"Bugs\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.flexWrapper}>\r\n        <FormDialog\r\n          triggerBtn={\r\n            isMobile\r\n              ? {\r\n                  type: 'fab',\r\n                  variant: 'extended',\r\n                  text: 'Bug',\r\n                  icon: AddIcon,\r\n                }\r\n              : {\r\n                  type: 'normal',\r\n                  text: 'Add Bug',\r\n                  icon: AddIcon,\r\n                  size: 'large',\r\n                }\r\n          }\r\n          title=\"Add a new bug\"\r\n        >\r\n          <BugForm isEditMode={false} />\r\n        </FormDialog>\r\n\r\n        {isAdmin ? (\r\n        <FormDialog\r\n          triggerBtn={{\r\n            type: isMobile ? 'round' : 'normal',\r\n            text: 'Add Administrators',\r\n            icon: AddIcon,\r\n            size: 'large',\r\n            style: isMobile ? { marginRight: '0em' } : { marginRight: '1em' },\r\n          }}\r\n          title=\"Add administrator(s)\"\r\n        >\r\n          <AdminForm\r\n            editMode=\"admin\"\r\n            currentAdmins={admins.map((a) => a.id)}\r\n          />\r\n        </FormDialog>\r\n        ) : '' }\r\n\r\n        {isAdmin ? (\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          startIcon={viewAdmins ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          onClick={() => setViewAdmins(!viewAdmins)}\r\n          size= 'large'\r\n          style={{ marginRight: '1em' }}\r\n        >\r\n          {viewAdmins ? 'Hide Admins' : 'View Admins'}\r\n          \r\n        </Button>\r\n        ) : '' }   \r\n\r\n\r\n\r\n     \r\n\r\n\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\" style={{ fontSize: '0.8em' }}>\r\n            Filter Bugs By\r\n          </FormLabel>\r\n          <RadioGroup row value={filterBy} onChange={handleFilterChange}>\r\n            <FormControlLabel\r\n              value=\"all\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"All\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"closed\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Closed\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"open\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Open\"\r\n            />\r\n            {isAdmin? (\r\n            <FormControlLabel\r\n              value=\"myBugs\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"myBugs\"\r\n            />\r\n            ) : '' }\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n          {admins.length > 0 && (\r\n          <AdminsCard\r\n          admins={ admins }\r\n          viewAdmins={ viewAdmins}\r\n          isMobile={ isMobile }\r\n          />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsActionCard;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsTable.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsListMobile.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsMenu.tsx",[],[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminForm.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminsCard.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminTable.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\assignment.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\EmailForm.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugCard.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\InviteVerificationPage.tsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"240","line":74,"column":15},{"ruleId":null,"fatal":true,"severity":2,"message":"241","line":221,"column":15},{"ruleId":null,"fatal":true,"severity":2,"message":"242","line":80,"column":59},{"ruleId":null,"fatal":true,"severity":2,"message":"243","line":42,"column":30},{"ruleId":null,"fatal":true,"severity":2,"message":"244","line":54,"column":37},{"ruleId":null,"fatal":true,"severity":2,"message":"245","line":63,"column":39},"Parsing error: Unexpected token, expected \")\"\n\n\u001b[0m \u001b[90m 72 | \u001b[39m      dispatch(fetchUsers())\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 73 | \u001b[39m      dispatch(notify(\u001b[32m`Welcome back, ${userData.username}!`\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'success'\u001b[39m))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 74 | \u001b[39m    } \u001b[36mcatch\u001b[39m (e\u001b[33m:\u001b[39m any) {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 75 | \u001b[39m      dispatch(setAuthError(getErrorMsg(e)))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 76 | \u001b[39m    }\u001b[0m\n\u001b[0m \u001b[90m 77 | \u001b[39m  }\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \")\"\n\n\u001b[0m \u001b[90m 219 | \u001b[39m     \u001b[0m\n\u001b[0m \u001b[90m 220 | \u001b[39m      dispatch(setBugs(allBugs))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 221 | \u001b[39m    } \u001b[36mcatch\u001b[39m (e\u001b[33m:\u001b[39m any) {\u001b[0m\n\u001b[0m \u001b[90m     | \u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 222 | \u001b[39m      alert(e)\u001b[0m\n\u001b[0m \u001b[90m 223 | \u001b[39m      dispatch(setFetchBugsError(getErrorMsg(e)))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 224 | \u001b[39m    }\u001b[0m","Parsing error: Unexpected token, expected \";\"\n\n\u001b[0m \u001b[90m 78 | \u001b[39m  }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 79 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 | \u001b[39m  \u001b[36mconst\u001b[39m imageForm \u001b[33m=\u001b[39m document\u001b[33m.\u001b[39mgetElementById(\u001b[32m\"image-form\"\u001b[39m) as \u001b[33mHTMLFormElement\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 81 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 82 | \u001b[39m  \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 83 | \u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 40 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 41 | \u001b[39m  \u001b[36mconst\u001b[39m handleSortChange \u001b[33m=\u001b[39m (e\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mChangeEvent\u001b[39m\u001b[33m<\u001b[39m{ value\u001b[33m:\u001b[39m unknown }\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 42 | \u001b[39m    setSortBy(e\u001b[33m.\u001b[39mtarget\u001b[33m.\u001b[39mvalue as \u001b[33mNoteSortValues\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 43 | \u001b[39m  }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 44 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 45 | \u001b[39m  \u001b[36mconst\u001b[39m sortedNotes \u001b[33m=\u001b[39m sortNotes(notes\u001b[33m,\u001b[39m sortBy)\u001b[33m;\u001b[39m\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 52 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 53 | \u001b[39m  \u001b[36mconst\u001b[39m handleUpdateNote \u001b[33m=\u001b[39m ({ body }\u001b[33m:\u001b[39m { body\u001b[33m:\u001b[39m string }) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 | \u001b[39m    dispatch(editNote(bugId\u001b[33m,\u001b[39m noteId as number\u001b[33m,\u001b[39m body\u001b[33m,\u001b[39m closeDialog))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 55 | \u001b[39m  }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 56 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 57 | \u001b[39m  \u001b[36mreturn\u001b[39m (\u001b[0m","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 61 | \u001b[39m  \u001b[36mconst\u001b[39m handleSortChange \u001b[33m=\u001b[39m (e\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mChangeEvent\u001b[39m\u001b[33m<\u001b[39m{ value\u001b[33m:\u001b[39m unknown }\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 62 | \u001b[39m    \u001b[36mconst\u001b[39m selectedValue \u001b[33m=\u001b[39m e\u001b[33m.\u001b[39mtarget\u001b[33m.\u001b[39mvalue\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 63 | \u001b[39m    dispatch(sortBugsBy(selectedValue as \u001b[33mBugSortValues\u001b[39m))\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 64 | \u001b[39m  }\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 65 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 66 | \u001b[39m  \u001b[36mconst\u001b[39m handleFilterChange \u001b[33m=\u001b[39m (e\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mChangeEvent\u001b[39m\u001b[33m<\u001b[39m\u001b[33mHTMLInputElement\u001b[39m\u001b[33m>\u001b[39m) \u001b[33m=>\u001b[39m {\u001b[0m"]