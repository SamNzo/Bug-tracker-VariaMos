[{"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\index.tsx":"1","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\store.ts":"2","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\App.tsx":"3","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\authSlice.ts":"4","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\bugsSlice.ts":"5","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\usersSlice.ts":"6","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\notificationSlice.ts":"7","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\themeSlice.ts":"8","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\localStorage.ts":"9","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\muiStyles.ts":"10","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customTheme.ts":"11","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\Routes.tsx":"12","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ToastNotification.tsx":"13","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\NavBar.tsx":"14","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\helperFuncs.ts":"15","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\auth.ts":"16","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\notes.ts":"17","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\bugs.ts":"18","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\users.ts":"19","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserMenuMobile.tsx":"20","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserButtonsDesktop.tsx":"21","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\LoginPage.tsx":"22","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\SignupPage.tsx":"23","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotFoundPage.tsx":"24","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsDetailsPage.tsx":"25","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\backendUrl.ts":"26","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customStyles.ts":"27","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DarkModeSwitch.tsx":"28","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\LoadingSpinner.tsx":"29","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\InfoText.tsx":"30","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugForm.tsx":"31","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ConfirmDialog.tsx":"32","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotesCard.tsx":"33","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FormDialog.tsx":"34","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortNotes.ts":"35","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\SortBar.tsx":"36","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\HideOnScroll.tsx":"37","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\CustomDialogTitle.tsx":"38","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NoteForm.tsx":"39","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ErrorBox.tsx":"40","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FilterBar.tsx":"41","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DemoCredsBox.tsx":"42","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortBugs.ts":"43","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\filterBugs.ts":"44","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\data\\demoCreds.ts":"45","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsActionCard.tsx":"46","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsTable.tsx":"47","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsListMobile.tsx":"48","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsMenu.tsx":"49","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsPage.tsx":"50","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminForm.tsx":"51","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminsCard.tsx":"52","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminTable.tsx":"53","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\assignment.ts":"54","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\EmailForm.tsx":"55"},{"size":397,"mtime":1655210140913,"results":"56","hashOfConfig":"57"},{"size":778,"mtime":1655405504455,"results":"58","hashOfConfig":"57"},{"size":1450,"mtime":1656622135223,"results":"59","hashOfConfig":"57"},{"size":4966,"mtime":1656699941935,"results":"60","hashOfConfig":"57"},{"size":11131,"mtime":1656517258243,"results":"61","hashOfConfig":"57"},{"size":3343,"mtime":1656606232157,"results":"62","hashOfConfig":"57"},{"size":1268,"mtime":1655210140925,"results":"63","hashOfConfig":"57"},{"size":560,"mtime":1655210140926,"results":"64","hashOfConfig":"57"},{"size":1015,"mtime":1656686986901,"results":"65","hashOfConfig":"57"},{"size":10020,"mtime":1655449458067,"results":"66","hashOfConfig":"57"},{"size":561,"mtime":1655474909637,"results":"67","hashOfConfig":"57"},{"size":1736,"mtime":1656699516597,"results":"68","hashOfConfig":"57"},{"size":1065,"mtime":1655210140911,"results":"69","hashOfConfig":"57"},{"size":3486,"mtime":1656622441340,"results":"70","hashOfConfig":"57"},{"size":864,"mtime":1655210140933,"results":"71","hashOfConfig":"57"},{"size":1211,"mtime":1656511764482,"results":"72","hashOfConfig":"57"},{"size":927,"mtime":1655393794968,"results":"73","hashOfConfig":"57"},{"size":1346,"mtime":1656018617030,"results":"74","hashOfConfig":"57"},{"size":1207,"mtime":1656617120909,"results":"75","hashOfConfig":"57"},{"size":3026,"mtime":1656442391717,"results":"76","hashOfConfig":"57"},{"size":3543,"mtime":1656698644838,"results":"77","hashOfConfig":"57"},{"size":4690,"mtime":1655425563579,"results":"78","hashOfConfig":"57"},{"size":7465,"mtime":1656476343579,"results":"79","hashOfConfig":"57"},{"size":752,"mtime":1655210140919,"results":"80","hashOfConfig":"57"},{"size":7625,"mtime":1656432996741,"results":"81","hashOfConfig":"57"},{"size":75,"mtime":1656615475793,"results":"82","hashOfConfig":"57"},{"size":863,"mtime":1655475642525,"results":"83","hashOfConfig":"57"},{"size":1424,"mtime":1655210140907,"results":"84","hashOfConfig":"57"},{"size":437,"mtime":1655210140910,"results":"85","hashOfConfig":"57"},{"size":433,"mtime":1655210140909,"results":"86","hashOfConfig":"57"},{"size":4676,"mtime":1656455193315,"results":"87","hashOfConfig":"57"},{"size":3966,"mtime":1655210140906,"results":"88","hashOfConfig":"57"},{"size":6160,"mtime":1655760072125,"results":"89","hashOfConfig":"57"},{"size":3604,"mtime":1655210140908,"results":"90","hashOfConfig":"57"},{"size":628,"mtime":1655210140935,"results":"91","hashOfConfig":"57"},{"size":1240,"mtime":1655210140910,"results":"92","hashOfConfig":"57"},{"size":349,"mtime":1655210140909,"results":"93","hashOfConfig":"57"},{"size":1703,"mtime":1655210140906,"results":"94","hashOfConfig":"57"},{"size":2708,"mtime":1655390166494,"results":"95","hashOfConfig":"57"},{"size":512,"mtime":1655210140908,"results":"96","hashOfConfig":"57"},{"size":1633,"mtime":1655210140908,"results":"97","hashOfConfig":"57"},{"size":415,"mtime":1655478079232,"results":"98","hashOfConfig":"57"},{"size":2272,"mtime":1655210140934,"results":"99","hashOfConfig":"57"},{"size":594,"mtime":1656415888528,"results":"100","hashOfConfig":"57"},{"size":103,"mtime":1655210140913,"results":"101","hashOfConfig":"57"},{"size":5860,"mtime":1656516102248,"results":"102","hashOfConfig":"57"},{"size":3343,"mtime":1656387594083,"results":"103","hashOfConfig":"57"},{"size":3682,"mtime":1656422365414,"results":"104","hashOfConfig":"57"},{"size":6012,"mtime":1656435651154,"results":"105","hashOfConfig":"57"},{"size":3560,"mtime":1656437367761,"results":"106","hashOfConfig":"57"},{"size":7387,"mtime":1656514142812,"results":"107","hashOfConfig":"57"},{"size":2065,"mtime":1656355406023,"results":"108","hashOfConfig":"57"},{"size":2768,"mtime":1656013868452,"results":"109","hashOfConfig":"57"},{"size":454,"mtime":1656353145490,"results":"110","hashOfConfig":"57"},{"size":3674,"mtime":1656516566720,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1632vv6",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"114"},"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\index.tsx",[],["234","235"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\store.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\App.tsx",["236"],"import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { autoLogin } from './redux/slices/authSlice';\r\nimport { selectThemeState, toggleDarkMode } from './redux/slices/themeSlice';\r\nimport NavBar from './components/NavBar';\r\nimport Routes from './Routes';\r\nimport ToastNotification from './components/ToastNotification';\r\nimport storage from './utils/localStorage';\r\n\r\nimport customTheme from './styles/customTheme';\r\nimport { useBodyStyles } from './styles/muiStyles';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { selectUsersState } from './redux/slices/usersSlice';/*\r\nimport { User } from '../../server/src/entity/User';*/\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const { darkMode } = useSelector(selectThemeState);\r\n  const classes = useBodyStyles(darkMode)();\r\n\r\n  useEffect(() => {\r\n    dispatch(autoLogin());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadedDarkMode = storage.loadDarkMode();\r\n    if (loadedDarkMode && !darkMode) {\r\n      dispatch(toggleDarkMode());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={customTheme(darkMode)}>\r\n      <div className={classes.root}>\r\n        <NavBar />\r\n        <Routes />\r\n        <ToastNotification />\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\authSlice.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\bugsSlice.ts",["237","238","239"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../store';\r\nimport bugService from '../../services/bugs';\r\nimport assignmentService from '../../services/assignment';\r\nimport noteService from '../../services/notes';\r\nimport {\r\n  BugState,\r\n  BugSortValues,\r\n  BugPayload,\r\n  EditedBugData,\r\n  ClosedReopenedBugData,\r\n  Note,\r\n  BugFilterValues,\r\n  AssignedAdmins,\r\n  User,\r\n} from '../types';\r\nimport { notify } from './notificationSlice';\r\nimport { History } from 'history';\r\nimport { getErrorMsg } from '../../utils/helperFuncs';\r\nimport userService from '../../services/users';\r\nimport usersSlice from './usersSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\ninterface InitialBugState {\r\n  bugs: BugState[];\r\n  fetchLoading: boolean;\r\n  fetchError: string | null;\r\n  submitLoading: boolean;\r\n  submitError: string | null;\r\n  sortBy: BugSortValues;\r\n  filterBy: BugFilterValues;\r\n}\r\n\r\nconst initialState: InitialBugState = {\r\n  bugs: [],\r\n  fetchLoading: false,\r\n  fetchError: null,\r\n  submitLoading: false,\r\n  submitError: null,\r\n  sortBy: 'newest',\r\n  filterBy: 'all',\r\n};\r\n\r\nconst bugsSlice = createSlice({\r\n  name: 'bugs',\r\n  initialState,\r\n  reducers: {\r\n    setBugs: (\r\n      state,\r\n      action: PayloadAction<BugState[]>\r\n    ) => {\r\n      state.bugs = action.payload;\r\n      state.fetchLoading = false;\r\n      state.fetchError = null;\r\n    },\r\n    addBug: (\r\n      state,\r\n      action: PayloadAction<BugState>\r\n    ) => {\r\n      state.bugs.push(action.payload);\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    updateBug: (\r\n      state,\r\n      action: PayloadAction<{\r\n        data: EditedBugData;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) => b.id === action.payload.bugId ? {...b, ...action.payload.data } : b\r\n      );\r\n\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    removeBug: (\r\n      state,\r\n      action: PayloadAction<string>\r\n    ) => {\r\n      state.bugs = state.bugs.filter((b) => b.id !== action.payload);\r\n    },\r\n    updateBugStatus: (\r\n      state,\r\n      action: PayloadAction<{\r\n        data: ClosedReopenedBugData;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) => b.id === action.payload.bugId ? {...b, ...action.payload.data } : b\r\n      );\r\n    },\r\n    assignBug: (\r\n        state,\r\n        action: PayloadAction<{ assignments: AssignedAdmins[]; bugId: string }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) =>\r\n        b.id === action.payload.bugId\r\n          ? { ...b, assignments: action.payload.assignments }\r\n          : b\r\n      );\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    addNote: (\r\n      state,\r\n      action: PayloadAction<{ note: Note; bugId: string }>\r\n    ) => {\r\n      state.bugs = state.bugs.map((b) =>\r\n        b.id === action.payload.bugId\r\n          ? { ...b, notes: [...b.notes, action.payload.note] }\r\n          : b\r\n      );\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    updateNote: (\r\n      state,\r\n      action: PayloadAction<{\r\n        data: { body: string; updatedAt: Date };\r\n        noteId: number;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      const bug = state.bugs.find(\r\n        (b) => b.id === action.payload.bugId\r\n      );\r\n\r\n      if (bug) {\r\n        const updatedNotes = bug.notes.map((n) =>\r\n          n.id === action.payload.noteId ? { ...n, ...action.payload.data } : n\r\n        );\r\n\r\n        state.bugs = state.bugs.map((b) =>\r\n          b.id === action.payload.bugId ? { ...b, notes: updatedNotes } : b\r\n        );\r\n\r\n        state.submitLoading = false;\r\n        state.submitError = null;\r\n      }\r\n    },\r\n    removeNote: (\r\n      state,\r\n      action: PayloadAction<{\r\n        noteId: number;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      const bug = state.bugs.find(\r\n        (b) => b.id === action.payload.bugId\r\n      );\r\n\r\n      if (bug) {\r\n        const updatedNotes = bug.notes.filter(\r\n          (n) => n.id !== action.payload.noteId\r\n        );\r\n\r\n        state.bugs = state.bugs.map((b) =>\r\n          b.id === action.payload.bugId ? { ...b, notes: updatedNotes } : b\r\n        );\r\n      }\r\n    },\r\n    setFetchBugsLoading: (state) => {\r\n      state.fetchLoading = true;\r\n      state.fetchError = null;\r\n    },\r\n    setFetchBugsError: (state, action: PayloadAction<string>) => {\r\n      state.fetchLoading = false;\r\n      state.fetchError = action.payload;\r\n    },\r\n\r\n    setSubmitBugLoading: (state) => {\r\n      state.submitLoading = true;\r\n      state.submitError = null;\r\n    },\r\n    setSubmitBugError: (state, action: PayloadAction<string>) => {\r\n      state.submitLoading = false;\r\n      state.submitError = action.payload;\r\n    },\r\n    clearSubmitBugError: (state) => {\r\n      state.submitError = null;\r\n    },\r\n    sortBugsBy: (state, action: PayloadAction<BugSortValues>) => {\r\n      state.sortBy = action.payload;\r\n    },\r\n    filterBugsBy: (state, action: PayloadAction<BugFilterValues>) => {\r\n      state.filterBy = action.payload;\r\n    },\r\n  }\r\n}\r\n)\r\n\r\nexport const {\r\n  setBugs,\r\n  addBug,\r\n  updateBug,\r\n  removeBug,\r\n  updateBugStatus,\r\n  addNote,\r\n  updateNote,\r\n  removeNote,\r\n  setFetchBugsLoading,\r\n  setFetchBugsError,\r\n  setSubmitBugLoading,\r\n  setSubmitBugError,\r\n  clearSubmitBugError,\r\n  sortBugsBy,\r\n  filterBugsBy,\r\n  assignBug,\r\n} = bugsSlice.actions;\r\n\r\nexport const fetchBugs = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      \r\n      dispatch(setFetchBugsLoading());\r\n      \r\n      const allBugs = await bugService.getBugs();\r\n     \r\n      dispatch(setBugs(allBugs));\r\n    } catch (e: any) {\r\n      alert(e)\r\n      dispatch(setFetchBugsError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNewBug = (\r\n  bugData: BugPayload,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      const newBug = await bugService.createBug(bugData);\r\n      dispatch(addBug(newBug));\r\n      dispatch(notify('New bug added!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const editBug = (\r\n  bugId: string,\r\n  bugData: BugPayload,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      const updatedBug = await bugService.updateBug(bugId, bugData);\r\n      const {\r\n        title,\r\n        description,\r\n        priority,\r\n        updatedAt,\r\n        updatedBy,\r\n      } = updatedBug as EditedBugData;\r\n\r\n      dispatch(\r\n        updateBug({\r\n          data: { title, description, priority, updatedAt, updatedBy },\r\n          bugId,\r\n        })\r\n      );\r\n      dispatch(notify('Successfully updated the bug!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteBug = (\r\n  bugId: string,\r\n  history: History\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await bugService.deleteBug(bugId);\r\n      history.push(`/`);\r\n      dispatch(removeBug(bugId));\r\n      dispatch(notify('Deleted the bug.', 'success'));\r\n    } catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const closeReopenBug = (\r\n  bugId: string,\r\n  action: 'close' | 'reopen'\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let returnedData;\r\n      if (action === 'close') {\r\n        returnedData = await bugService.closeBug(bugId);\r\n      } else {\r\n        returnedData = await bugService.reopenBug(bugId);\r\n      }\r\n      const {\r\n        isResolved,\r\n        closedAt,\r\n        closedBy,\r\n        reopenedAt,\r\n        reopenedBy,\r\n      } = returnedData as ClosedReopenedBugData;\r\n      dispatch(\r\n        updateBugStatus({\r\n          data: { isResolved, closedAt, closedBy, reopenedAt, reopenedBy },\r\n          bugId,\r\n        })\r\n      );\r\n      dispatch(\r\n        notify(\r\n          `${action === 'close' ? 'Closed' : 'Re-opened'} the bug!`,\r\n          'success'\r\n        )\r\n      );\r\n    } catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const assignBugTo = (\r\n  bugId: string,\r\n  admins: string[],\r\n  closeDialog?: () => void\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const AssignmentArray = await assignmentService.assignBug(bugId, admins);\r\n      console.log(AssignmentArray);\r\n      dispatch(assignBug({ assignments: AssignmentArray, bugId }));\r\n      const adminsToSendNotif = AssignmentArray.map((a: any) => a.admin)\r\n      const adminsIdsToSendNotif = adminsToSendNotif.map((a: any) => a.id);\r\n      console.log(adminsIdsToSendNotif)\r\n      await userService.sendNotification(adminsIdsToSendNotif);\r\n      dispatch(notify('Bug assigned!', 'success'));\r\n      closeDialog && closeDialog();\r\n    }\r\n    catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNote = (\r\n  bugId: string,\r\n  noteBody: string,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      const newNote = await noteService.createNote(bugId, noteBody);\r\n      dispatch(addNote({ note: newNote, bugId }));\r\n      dispatch(notify('New note added!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const editNote = (\r\n  bugId: string,\r\n  noteId: number,\r\n  noteBody: string,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBugLoading());\r\n      const returnedData = await noteService.editNote(\r\n        bugId,\r\n        noteId,\r\n        noteBody\r\n      );\r\n      const { body, updatedAt } = returnedData as Note;\r\n      dispatch(\r\n        updateNote({ data: { body, updatedAt }, noteId, bugId })\r\n      );\r\n      dispatch(notify('Updated the note!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e: any) {\r\n      dispatch(setSubmitBugError(getErrorMsg(e)));\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteNote = (\r\n  bugId: string,\r\n  noteId: number\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await noteService.deleteNote(bugId, noteId);\r\n      dispatch(removeNote({ noteId, bugId }));\r\n      dispatch(notify('Deleted the note.', 'success'));\r\n    } catch (e: any) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectBugsState = (state: RootState) => state.bugs;\r\n\r\nexport const selectBugsById = (state: RootState, bugId: string) => {\r\n  return state.bugs.bugs.find((b) => b.id === bugId);\r\n};\r\n\r\nexport const selectBugsByProjectId = (state: RootState) => {\r\n  return state.bugs.bugs;\r\n};\r\n\r\nexport const selectAllAdmins = (state: RootState) => {\r\n  return state.users.users.filter((u) => u.isAdmin === true);\r\n};\r\n\r\nexport default bugsSlice.reducer;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\usersSlice.ts",["240"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../store';\r\nimport userService from '../../services/users';\r\nimport { EmailPayload, User } from '../types';\r\nimport { notify } from './notificationSlice';\r\nimport { getErrorMsg } from '../../utils/helperFuncs';\r\nimport { string } from 'yup';\r\n\r\ninterface InitialBugState {\r\n  users: User[];\r\n  status: 'idle' | 'loading' | 'succeeded';\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: InitialBugState = {\r\n  users: [],\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    setUsers: (state, action: PayloadAction<User[]>) => {\r\n      state.users = action.payload;\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    },\r\n    setUsersLoading: (state) => {\r\n      state.status = 'loading';\r\n      state.error = null;\r\n    },\r\n    addAdmin: (state, action: PayloadAction<{ admins: string }>) => {\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    },\r\n    removeAdministrator: (state, action: PayloadAction<{ adminId: string }>) => {\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    },\r\n    ChangeSettings: (state, action: PayloadAction<{ data: EmailPayload; userId: string }>) => {\r\n      state.users = state.users.map((u) => u.id === action.payload.userId ? {...u, ...action.payload.data } : u\r\n      );\r\n      state.status = 'succeeded';\r\n      state.error = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setUsers, setUsersLoading, addAdmin, removeAdministrator, ChangeSettings } = usersSlice.actions;\r\n\r\nexport const fetchUsers = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setUsersLoading());\r\n      const allUsers = await userService.getUsers();\r\n      dispatch(setUsers(allUsers));\r\n    } catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const addAdmins =(\r\n  admins: string[],\r\n  closeDialog?: () => void\r\n) : AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newAdmins = await userService.addAdmins(admins);\r\n      dispatch(addAdmin({ admins: newAdmins }));\r\n      dispatch(notify('New admin(s) added!', 'success'));\r\n      closeDialog && closeDialog();\r\n    }\r\n    catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  }\r\n}\r\n\r\nexport const removeAdmin = (\r\n  adminId: string\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await userService.removeAdmin(adminId);\r\n      dispatch(removeAdministrator({ adminId }));\r\n      dispatch(notify('Removed the administrator.', 'success'));\r\n    } catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeSettings = (\r\n  data: EmailPayload,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedUser: User = await userService.changeSettings(data);\r\n      const userId = updatedUser.id;\r\n      dispatch(ChangeSettings( { data, userId }));\r\n      dispatch(notify('New settings saved!', 'success'));\r\n      closeDialog && closeDialog();\r\n    } catch (e) {\r\n      dispatch(notify(getErrorMsg(e), 'error'));\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectUsersState = (state: RootState) => {\r\n  return state.users;\r\n}\r\n\r\nexport default usersSlice.reducer;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\notificationSlice.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\redux\\slices\\themeSlice.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\localStorage.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\muiStyles.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customTheme.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\Routes.tsx",["241","242","243","244"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ToastNotification.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\NavBar.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\helperFuncs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\auth.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\notes.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\bugs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\users.ts",["245"],"import { RepeatOneSharp } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\nimport { EmailPayload } from '../redux/types';\r\nimport { setConfig } from './auth';\r\n\r\nconst baseUrl = `${backendUrl}/users`;\r\n\r\nconst getUsers = async () => {\r\n  const response = await axios.get(baseUrl, setConfig());\r\n  return response.data;\r\n};\r\n\r\nconst addAdmins = async (admins: string[]) => {\r\n  const response = await axios.post(`${baseUrl}/admins`, { admins }, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\nconst removeAdmin = async (adminId: string) => {\r\n  const response = await axios.delete(\r\n    `${baseUrl}/admin/${adminId}`, setConfig()\r\n  );\r\n  return response.data;\r\n};\r\n\r\nconst changeSettings = async (data: EmailPayload) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/email`, data, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\nconst sendNotification = async (adminsIds: string[]) => {\r\n  const response = await axios.post(\r\n    `${baseUrl}/sendNotification`, adminsIds, setConfig()\r\n  );\r\n  return response.data;\r\n}\r\n\r\n\r\nconst userService = { getUsers, addAdmins, removeAdmin, changeSettings, sendNotification };\r\n\r\nexport default userService;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserMenuMobile.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\UserButtonsDesktop.tsx",["246","247","248","249"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\LoginPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Auth\\SignupPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotFoundPage.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsDetailsPage.tsx",["250"],"import React from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  selectBugsById,\r\n  deleteBug,\r\n  closeReopenBug,\r\n  selectAllAdmins,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { RootState } from '../../redux/store';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport BugForm from './BugForm';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\nimport NotesCard from './NotesCard';\r\nimport { formatDateTime } from '../../utils/helperFuncs';\r\nimport { priorityStyles, statusStyles } from '../../styles/customStyles';\r\nimport CSS from 'csstype';\r\n\r\nimport { Paper, Typography, Divider, useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport AdminForm from './AdminForm';\r\n\r\ninterface ParamTypes {\r\n  bugId: string;\r\n}\r\n\r\nconst BugsDetailsPage = () => {\r\n  const classes = useMainPageStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const { bugId } = useParams<ParamTypes>();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const bug = useSelector((state: RootState) =>\r\n    selectBugsById(state, bugId)\r\n  );\r\n  const { user } = useSelector(selectAuthState);\r\n  const admins = useSelector(selectAllAdmins);\r\n  \r\n  if (!bug) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.notFoundPaper}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"secondary\"\r\n            className={classes.error404Text}\r\n            style={{ marginTop: '5em' }}\r\n          >\r\n            404: Bug Not Found!\r\n          </Typography>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const {\r\n    id,\r\n    title,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    createdAt,\r\n    updatedBy,\r\n    updatedAt,\r\n    closedBy,\r\n    closedAt,\r\n    reopenedBy,\r\n    reopenedAt,\r\n    notes,\r\n    assignments,\r\n  } = bug;\r\n\r\n  const handleDeleteBug = () => {\r\n    dispatch(deleteBug(bugId, history));\r\n  };\r\n\r\n  const handleCloseBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'close'));\r\n  };\r\n\r\n  const handleReopenBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'reopen'));\r\n  };\r\n\r\n  const statusCSS: CSS.Properties = {\r\n    ...statusStyles(isResolved),\r\n    display: 'inline',\r\n    padding: '0.20em 0.4em',\r\n  };\r\n\r\n  const statusInfo = () => {\r\n    if (!isResolved && reopenedAt && reopenedBy) {\r\n      return (\r\n        <span>\r\n          <div style={statusCSS}>Re-opened</div> -{' '}\r\n          <em>{formatDateTime(reopenedAt)}</em> ~{' '}\r\n          <strong>{reopenedBy.username}</strong>\r\n        </span>\r\n      );\r\n    } else if (isResolved && closedAt && closedBy) {\r\n      return (\r\n        <span>\r\n          <div style={statusCSS}>Closed</div> -{' '}\r\n          <em>{formatDateTime(closedAt)}</em> ~{' '}\r\n          <strong>{closedBy.username}</strong>\r\n        </span>\r\n      );\r\n    } else {\r\n      return <div style={statusCSS}>Open</div>;\r\n    }\r\n  };\r\n\r\n  const closeReopenBtns = () => {\r\n    if (isResolved) {\r\n      return (\r\n        <ConfirmDialog\r\n          title=\"Re-open the Bug\"\r\n          contentText=\"Are you sure you want to re-open the bug?\"\r\n          actionBtnText=\"Re-open Bug\"\r\n          triggerBtn={{\r\n            type: isMobile ? 'round' : 'normal',\r\n            text: 'Re-open Bug',\r\n            icon: RedoIcon,\r\n          }}\r\n          actionFunc={handleReopenBug}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <ConfirmDialog\r\n          title=\"Close the Bug\"\r\n          contentText=\"Are you sure you want to close the bug?\"\r\n          actionBtnText=\"Close Bug\"\r\n          triggerBtn={{\r\n            type: isMobile ? 'round' : 'normal',\r\n            text: 'Close Bug',\r\n            icon: DoneOutlineIcon,\r\n          }}\r\n          actionFunc={handleCloseBug}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const updateBugBtn = () => {\r\n    return (\r\n      <FormDialog\r\n        triggerBtn={{\r\n          type: isMobile ? 'round' : 'normal',\r\n          text: 'Update Bug Info',\r\n          icon: EditOutlinedIcon,\r\n          style: { marginLeft: '1em' },\r\n        }}\r\n        title=\"Edit the bug details\"\r\n      >\r\n        <BugForm\r\n          isEditMode={true}\r\n          bugId={id}\r\n          currentData={{ title, description, priority }}\r\n        />\r\n      </FormDialog>\r\n    );\r\n  };\r\n\r\n  const deleteBugBtn = () => {\r\n    return (\r\n      <ConfirmDialog\r\n        title=\"Confirm Delete Bug\"\r\n        contentText=\"Are you sure you want to permanently delete the bug?\"\r\n        actionBtnText=\"Delete Bug\"\r\n        triggerBtn={{\r\n          type: isMobile ? 'round' : 'normal',\r\n          text: 'Delete Bug',\r\n          icon: DeleteOutlineIcon,\r\n          style: { marginLeft: '1em' },\r\n        }}\r\n        actionFunc={handleDeleteBug}\r\n      />\r\n    );\r\n  };\r\n\r\n  const assignBugBtn = () => {\r\n    return (\r\n      <FormDialog\r\n        triggerBtn={{\r\n          type: isMobile ? 'round' : 'normal',\r\n          text: 'Assign bug',\r\n          icon: EditOutlinedIcon,\r\n          style: { marginLeft: '1em' },\r\n        }}\r\n        title=\"Assign the bug to specific admin(s)\"\r\n      >\r\n        <AdminForm\r\n          editMode=\"\"\r\n          currentAdmins={admins.map((a) => a.id)}\r\n          bugId={bugId}\r\n        />\r\n      </FormDialog>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.detailsHeader}>\r\n        <Typography variant={isMobile ? 'h5' : 'h4'} color=\"secondary\">\r\n          <strong>{title}</strong>\r\n        </Typography>\r\n        <Divider style={{ margin: '0.5em 0' }} />\r\n        <Typography color=\"secondary\" variant=\"h6\">\r\n          {description}\r\n        </Typography>\r\n        <Typography\r\n          color=\"secondary\"\r\n          variant=\"subtitle2\"\r\n          className={classes.marginText}\r\n        >\r\n          Status: {statusInfo()}\r\n        </Typography>\r\n        <Typography\r\n          color=\"secondary\"\r\n          variant=\"subtitle2\"\r\n          className={classes.marginText}\r\n        >\r\n          Priority:{' '}\r\n          <div\r\n            style={{\r\n              ...priorityStyles(priority),\r\n              display: 'inline',\r\n              padding: '0.20em 0.4em',\r\n              textTransform: 'capitalize',\r\n            }}\r\n          >\r\n            {priority}\r\n          </div>\r\n        </Typography>\r\n        <Typography color=\"secondary\" variant=\"subtitle2\">\r\n          Created: <em>{formatDateTime(createdAt)}</em> ~{' '}\r\n          <strong>{createdBy.username}</strong>\r\n        </Typography>\r\n        {updatedBy && updatedAt && (\r\n          <Typography color=\"secondary\" variant=\"subtitle2\">\r\n            Updated: <em>{formatDateTime(updatedAt)}</em> ~{' '}\r\n            <strong>{updatedBy.username}</strong>\r\n          </Typography>\r\n        )}\r\n        {user?.isAdmin ? (\r\n        <div className={classes.btnsWrapper}>\r\n          {closeReopenBtns()}\r\n          {updateBugBtn()}\r\n          {deleteBugBtn()}\r\n          {assignBugBtn()}\r\n        </div>\r\n        ) : '' }\r\n      </Paper>\r\n      <NotesCard\r\n        notes={notes}\r\n        bugId={id}\r\n        isMobile={isMobile}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsDetailsPage;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\backendUrl.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\styles\\customStyles.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DarkModeSwitch.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\InfoText.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugForm.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ConfirmDialog.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NotesCard.tsx",["251"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { deleteNote } from '../../redux/slices/bugsSlice';\r\nimport { Note } from '../../redux/types';\r\nimport { RootState } from '../../redux/store';\r\nimport SortBar from '../../components/SortBar';\r\nimport sortNotes from '../../utils/sortNotes';\r\nimport NoteForm from './NoteForm';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport InfoText from '../../components/InfoText';\r\nimport { formatTimeAgo } from '../../utils/helperFuncs';\r\n\r\nimport { Paper, Typography, Avatar, Divider } from '@material-ui/core';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\n\r\nexport type NoteSortValues = 'newest' | 'oldest' | 'updated';\r\n\r\nconst menuItems = [\r\n  { value: 'newest', label: 'Newest' },\r\n  { value: 'oldest', label: 'Oldest' },\r\n  { value: 'updated', label: 'Recently Updated' },\r\n];\r\n\r\nconst NotesCard: React.FC<{\r\n  notes: Note[];\r\n  bugId: string;\r\n  isMobile: boolean;\r\n}> = ({ notes, bugId, isMobile }) => {\r\n  const classes = useMainPageStyles();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(selectAuthState);\r\n  const [sortBy, setSortBy] = useState<NoteSortValues>('newest');\r\n\r\n  const handleSortChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSortBy(e.target.value as NoteSortValues);\r\n  };\r\n\r\n  const sortedNotes = sortNotes(notes, sortBy);\r\n\r\n  const handleDeleteNote = (noteId: number) => {\r\n    dispatch(deleteNote(bugId, noteId));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.notesPaper}>\r\n      <div className={classes.flexInput}>\r\n        <Typography\r\n          variant={isMobile ? 'h6' : 'h5'}\r\n          color=\"secondary\"\r\n          className={classes.flexHeader}\r\n        >\r\n          <ForumOutlinedIcon\r\n            fontSize={isMobile ? 'default' : 'large'}\r\n            style={{ marginRight: '0.2em' }}\r\n          />\r\n          Notes\r\n        </Typography>\r\n        <div className={classes.sortNotesInput}>\r\n          <SortBar\r\n            sortBy={sortBy}\r\n            handleSortChange={handleSortChange}\r\n            menuItems={menuItems}\r\n            label=\"Notes\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <FormDialog\r\n        triggerBtn={\r\n          isMobile\r\n            ? { type: 'fab', variant: 'round', icon: CommentOutlinedIcon }\r\n            : {\r\n                type: 'normal',\r\n                text: 'Leave A Note',\r\n                icon: CommentOutlinedIcon,\r\n                size: 'large',\r\n                style: { marginTop: '1em' },\r\n              }\r\n        }\r\n        title=\"Post a note\"\r\n      >\r\n        <NoteForm isEditMode={false} bugId={bugId} />\r\n      </FormDialog>\r\n      <div className={classes.notesWrapper}>\r\n        <Divider />\r\n        {sortedNotes.length === 0 && (\r\n          <InfoText\r\n            text=\"No notes added yet.\"\r\n            variant={isMobile ? 'h6' : 'h5'}\r\n          />\r\n        )}\r\n        {sortedNotes.map((n) => (\r\n          <div key={n.id}>\r\n            <div className={classes.singleNote}>\r\n              <Avatar className={classes.avatar}>\r\n                {n.author.username.slice(0, 1)}\r\n              </Avatar>\r\n              <div>\r\n                <Typography color=\"secondary\" variant=\"caption\">\r\n                  {n.author.username}\r\n                </Typography>\r\n                <Typography color=\"secondary\" variant=\"caption\">\r\n                  <em> • {formatTimeAgo(n.createdAt)} ago</em>\r\n                </Typography>\r\n                {n.updatedAt !== n.createdAt && (\r\n                  <Typography color=\"secondary\" variant=\"caption\">\r\n                    {' '}\r\n                    • updated <em>{formatTimeAgo(n.updatedAt)} ago</em>\r\n                  </Typography>\r\n                )}\r\n                <Typography\r\n                  color=\"secondary\"\r\n                  variant=\"subtitle1\"\r\n                  className={classes.noteBody}\r\n                >\r\n                  {n.body}\r\n                </Typography>\r\n                <div className={classes.notesBtnWrapper}>\r\n                  {n.author.id === user?.id && (\r\n                    <FormDialog\r\n                      triggerBtn={{\r\n                        type: 'normal',\r\n                        text: 'Edit',\r\n                        icon: EditIcon,\r\n                        variant: 'outlined',\r\n                        size: 'small',\r\n                        style: { marginRight: '1em' },\r\n                        color: 'secondary',\r\n                      }}\r\n                      title=\"Edit the note\"\r\n                    >\r\n                      <NoteForm\r\n                        isEditMode={true}\r\n                        bugId={bugId}\r\n                        noteId={n.id}\r\n                        currentBody={n.body}\r\n                      />\r\n                    </FormDialog>\r\n                  )}\r\n                  {((n.author.id === user?.id) || (user?.isAdmin)) && (\r\n                    <ConfirmDialog\r\n                      title=\"Confirm Delete Note\"\r\n                      contentText=\"Are you sure you want to delete the note?\"\r\n                      actionBtnText=\"Delete Note\"\r\n                      triggerBtn={{\r\n                        type: 'normal',\r\n                        text: 'Delete',\r\n                        icon: DeleteIcon,\r\n                        variant: 'outlined',\r\n                        size: 'small',\r\n                        color: 'secondary',\r\n                      }}\r\n                      actionFunc={() => handleDeleteNote(n.id)}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Divider />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default NotesCard;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FormDialog.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortNotes.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\SortBar.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\HideOnScroll.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\CustomDialogTitle.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\NoteForm.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\ErrorBox.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\FilterBar.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\components\\DemoCredsBox.tsx",["252"],"import { Alert, AlertTitle } from '@material-ui/lab';\r\nimport demoCreds from '../data/demoCreds';\r\n\r\nconst DemoCredsBox = () => {\r\n  return (\r\n    <div style={{ width: '100%', marginTop: '0.8em', marginBottom: '0.8em' }}>\r\n      <Alert severity=\"info\">\r\n        <AlertTitle>VariaMos Bug Tracker</AlertTitle>\r\n        Login to report your issue\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DemoCredsBox;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\sortBugs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\utils\\filterBugs.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\data\\demoCreds.ts",[],["253","254"],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsActionCard.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsTable.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsListMobile.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsMenu.tsx",["255"],"import { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteBug, closeReopenBug, selectAllAdmins } from '../../redux/slices/bugsSlice';\r\nimport { BugPayload, User } from '../../redux/types';\r\nimport ConfirmDialog from '../../components/ConfirmDialog';\r\nimport FormDialog from '../../components/FormDialog';\r\nimport BugForm from './BugForm';\r\nimport NoteForm from './NoteForm';\r\n\r\nimport { Menu, IconButton, MenuItem } from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport AdminForm from './AdminForm';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\n\r\ninterface BugsMenuProps {\r\n  bugId: string;\r\n  currentData: BugPayload;\r\n  isResolved: boolean;\r\n  iconSize?: 'small' | 'default' | 'large';\r\n  isAdmin: boolean | undefined;\r\n}\r\n\r\nconst BugsMenu: React.FC<BugsMenuProps> = ({\r\n  bugId,\r\n  currentData,\r\n  isResolved,\r\n  iconSize,\r\n  isAdmin,\r\n}) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const admins = useSelector(selectAllAdmins);\r\n  const { user } = useSelector(selectAuthState);\r\n  \r\n  if (user) {admins.push(user);}\r\n\r\n  const handleOpenMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDeleteBug = () => {\r\n    dispatch(deleteBug(bugId, history));\r\n  };\r\n\r\n  const handleCloseBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'close'));\r\n  };\r\n\r\n  const handleReopenBug = () => {\r\n    dispatch(closeReopenBug(bugId, 'reopen'));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleOpenMenu} size=\"small\">\r\n        <MoreHorizIcon color=\"primary\" fontSize={iconSize || 'large'} />\r\n      </IconButton>\r\n\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleCloseMenu}\r\n        marginThreshold={8}\r\n        elevation={4}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <MenuItem\r\n          onClick={handleCloseMenu}\r\n          component={RouterLink}\r\n          to={`/bugs/${bugId}`}\r\n        >\r\n          <OpenInNewIcon style={{ marginRight: '10px' }} />\r\n          Bug Details\r\n        </MenuItem>\r\n        <FormDialog\r\n          triggerBtn={{\r\n            type: 'menu',\r\n            text: 'Leave A Note',\r\n            icon: CommentOutlinedIcon,\r\n            iconStyle: { marginRight: '10px' },\r\n            closeMenu: handleCloseMenu,\r\n          }}\r\n          title=\"Post a note\"\r\n        >\r\n          <NoteForm isEditMode={false} bugId={bugId} />\r\n        </FormDialog>\r\n          {isAdmin ? (\r\n          <FormDialog\r\n          triggerBtn={{\r\n            type: 'menu',\r\n            text: 'Update Bug',\r\n            icon: EditOutlinedIcon,\r\n            iconStyle: { marginRight: '10px' },\r\n            closeMenu: handleCloseMenu,\r\n          }}\r\n          title=\"Edit the bug details\"\r\n        >\r\n          <BugForm\r\n            isEditMode={true}\r\n            bugId={bugId}\r\n            currentData={currentData}\r\n          />\r\n        </FormDialog>\r\n          ): ''}\r\n        {(isResolved && isAdmin) ? (\r\n          <ConfirmDialog\r\n            title=\"Re-open the Bug\"\r\n            contentText=\"Are you sure you want to re-open the bug?\"\r\n            actionBtnText=\"Re-open Bug\"\r\n            triggerBtn={{\r\n              type: 'menu',\r\n              text: 'Re-open Bug',\r\n              icon: RedoIcon,\r\n              iconStyle: { marginRight: '10px' },\r\n              closeMenu: handleCloseMenu,\r\n            }}\r\n            actionFunc={handleReopenBug}\r\n          />\r\n        ) : '' }\r\n        {(!isResolved && isAdmin) ? (\r\n          <ConfirmDialog\r\n            title=\"Close the Bug\"\r\n            contentText=\"Are you sure you want to close the bug?\"\r\n            actionBtnText=\"Close Bug\"\r\n            triggerBtn={{\r\n              type: 'menu',\r\n              text: 'Close Bug',\r\n              icon: DoneOutlineIcon,\r\n              iconStyle: { marginRight: '10px' },\r\n              closeMenu: handleCloseMenu,\r\n            }}\r\n            actionFunc={handleCloseBug}\r\n          />\r\n        ) : '' }\r\n        {isAdmin ? (\r\n          <ConfirmDialog\r\n            title=\"Confirm Delete Bug\"\r\n            contentText=\"Are you sure you want to permanently delete the bug?\"\r\n            actionBtnText=\"Delete Bug\"\r\n            triggerBtn={{\r\n              type: 'menu',\r\n              text: 'Delete Bug',\r\n              icon: DeleteOutlineIcon,\r\n              iconStyle: { marginRight: '10px' },\r\n              closeMenu: handleCloseMenu,\r\n            }}\r\n            actionFunc={handleDeleteBug}\r\n        />\r\n        ) : ''}\r\n        {isAdmin ? (\r\n          <FormDialog\r\n          triggerBtn={{\r\n            type: 'menu',\r\n            text: 'Assign bug',\r\n            icon: ControlPointIcon,\r\n            iconStyle: { marginRight: '10px' },\r\n            closeMenu: handleCloseMenu,\r\n          }}\r\n          title=\"Assign the bug to specific admins\"\r\n        >\r\n          <AdminForm\r\n            editMode=\"\"\r\n            currentAdmins={admins.map((a) => a.id)}\r\n            bugId={bugId}\r\n          />\r\n        </FormDialog>\r\n        ) : '' }\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsMenu;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\BugsPage.tsx",["256","257","258","259","260"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchBugs,\r\n  selectBugsByProjectId,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { RootState } from '../../redux/store';\r\nimport BugsTable from './BugsTable';\r\nimport BugsActionCard from './BugsActionCard';\r\nimport BugsListMobile from './BugsListMobile';\r\nimport sortBugs from '../../utils/sortBugs';\r\nimport filterBugs from '../../utils/filterBugs';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\nimport InfoText from '../../components/InfoText';\r\nimport { Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport { useMainPageStyles } from '../../styles/muiStyles';\r\nimport BugReportOutlinedIcon from '@material-ui/icons/BugReportOutlined';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { selectUsersState } from '../../redux/slices/usersSlice';\r\nimport { BugState } from '../../redux/types';\r\n\r\n\r\nconst BugsPage: React.FC<{ isMobile: boolean }> = ({\r\n  isMobile,\r\n  }) => {\r\n    const classes = useMainPageStyles();\r\n    const dispatch = useDispatch();\r\n    const bugs = useSelector((state: RootState) =>\r\n    selectBugsByProjectId(state)\r\n  );\r\n  const { fetchLoading, fetchError, sortBy, filterBy } = useSelector(\r\n    selectBugsState\r\n  );\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  const { user, loading, error } = useSelector(selectAuthState);\r\n  const userId = user?.id;\r\n\r\n  useEffect(() => {\r\n    if (!bugs) {\r\n      dispatch(fetchBugs());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const filteredSortedBugs =\r\n    bugs &&\r\n    sortBugs(\r\n      bugs.filter(\r\n        (b) =>\r\n          b.title.toLowerCase().includes(filterValue.toLowerCase()) &&\r\n          filterBugs(filterBy, b, userId)\r\n      ),\r\n      sortBy\r\n    );\r\n\r\n  const bugsDataToDisplay = () => {\r\n    if (fetchLoading) {\r\n      \r\n      return (\r\n        <LoadingSpinner\r\n          marginTop={isMobile ? '3em' : '4em'}\r\n          size={isMobile ? 60 : 80}\r\n        />\r\n      );\r\n    } else if (fetchError) {\r\n      \r\n      return (\r\n        <InfoText\r\n          text={`Error: ${fetchError}`}\r\n          variant={isMobile ? 'h6' : 'h5'}\r\n        />\r\n      );\r\n    } else if (!bugs || bugs.length === 0) {\r\n      return (\r\n        <InfoText text=\"No Bugs added yet.\" variant={isMobile ? 'h6' : 'h5'} />\r\n      );\r\n    } else if (!filteredSortedBugs || filteredSortedBugs.length === 0) {\r\n      return (\r\n        <InfoText text=\"No matches found.\" variant={isMobile ? 'h6' : 'h5'} />\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {isMobile ? (\r\n            <BugsListMobile bugs={filteredSortedBugs} user={user}/>\r\n          ) : (\r\n            <BugsTable bugs={filteredSortedBugs} user={user}/>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.bugsPaper}>\r\n      <Typography\r\n        variant={isMobile ? 'h6' : 'h5'}\r\n        color=\"secondary\"\r\n        className={classes.flexHeader}\r\n      >\r\n        <BugReportOutlinedIcon\r\n          fontSize={isMobile ? 'default' : 'large'}\r\n          style={{ marginRight: '0.2em' }}\r\n        />\r\n        Bugs\r\n      </Typography>\r\n      <div className={classes.bugsActionCard}>\r\n        <BugsActionCard\r\n          filterValue={filterValue}\r\n          setFilterValue={setFilterValue}\r\n          isMobile={isMobile}\r\n        />\r\n      </div>\r\n      {bugsDataToDisplay()}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BugsPage;\r\n","C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminForm.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminsCard.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\AdminTable.tsx",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\services\\assignment.ts",[],"C:\\Users\\samnz\\OneDrive\\Documents\\ENSTA\\ANNEE 2\\Stage ETS\\bug-tracker\\client\\src\\pages\\Main\\EmailForm.tsx",["261","262","263"],"import { useForm, Controller } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  clearSubmitBugError,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugsSlice';\r\nimport { BugPayload, EmailPayload } from '../../redux/types';\r\nimport ErrorBox from '../../components/ErrorBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport {\r\n  TextField,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Button,\r\n  InputAdornment,\r\n  FormLabel,\r\n  FormControl,\r\n} from '@material-ui/core';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\nimport TitleIcon from '@material-ui/icons/Title';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { changeSettings } from '../../redux/slices/usersSlice';\r\n\r\ninterface EmailFormProps {\r\n  closeDialog?: () => void;\r\n  emailExist: boolean;\r\n  currentData?: EmailPayload;\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n      .string()\r\n  });\r\n\r\nconst EmailForm: React.FC<EmailFormProps> = ({\r\n  closeDialog,\r\n  emailExist,\r\n  currentData,\r\n}) => {\r\n\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(selectAuthState);\r\n  const userId = user?.id;\r\n  const { submitError, submitLoading } = useSelector(selectBugsState);\r\n  const { register, control, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: {\r\n      email: user?.email || '',\r\n      notificationsOn: user?.notificationsOn || true,\r\n    },\r\n  });\r\n\r\n  const handleChangeSettings = (data: EmailPayload) => {\r\n    dispatch(changeSettings(data, closeDialog));\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(handleChangeSettings)}\r\n    >\r\n      <br></br>\r\n      <TextField\r\n        inputRef={register}\r\n        name=\"email\"\r\n        fullWidth\r\n        type=\"text\"\r\n        label=\"New Email adress\"\r\n        variant=\"outlined\"\r\n        error={'email' in errors}\r\n        helperText={'email' in errors ? errors.email?.message : ''}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <TitleIcon color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        name=\"notifications\"\r\n        as={\r\n          <FormControl className={classes.radioGroupForm}>\r\n            <RadioGroup row className={classes.radioGroup}>\r\n              <FormLabel className={classes.radioGroupLabel}>\r\n                Notifications (On/Off):\r\n              </FormLabel>\r\n              <div className={classes.formControlLabels}>\r\n                <FormControlLabel\r\n                  value=\"on\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"On\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"off\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Off\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        }\r\n      />\r\n      \r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        fullWidth\r\n        className={classes.submitBtn}\r\n        type=\"submit\"\r\n        disabled={submitLoading}\r\n      >\r\n        Change Settings\r\n      </Button>\r\n      {submitError && (\r\n        <ErrorBox\r\n          errorMsg={submitError}\r\n          clearErrorMsg={() => dispatch(clearSubmitBugError())}\r\n        />\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EmailForm;\r\n",{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":13,"column":10,"nodeType":"270","messageId":"271","endLine":13,"endColumn":26},{"ruleId":"268","severity":1,"message":"272","line":15,"column":3,"nodeType":"270","messageId":"271","endLine":15,"endColumn":7},{"ruleId":"268","severity":1,"message":"273","line":21,"column":8,"nodeType":"270","messageId":"271","endLine":21,"endColumn":18},{"ruleId":"268","severity":1,"message":"274","line":22,"column":10,"nodeType":"270","messageId":"271","endLine":22,"endColumn":21},{"ruleId":"268","severity":1,"message":"275","line":7,"column":10,"nodeType":"270","messageId":"271","endLine":7,"endColumn":16},{"ruleId":"268","severity":1,"message":"276","line":13,"column":10,"nodeType":"270","messageId":"271","endLine":13,"endColumn":25},{"ruleId":"268","severity":1,"message":"277","line":14,"column":10,"nodeType":"270","messageId":"271","endLine":14,"endColumn":19},{"ruleId":"268","severity":1,"message":"278","line":15,"column":10,"nodeType":"270","messageId":"271","endLine":15,"endColumn":43},{"ruleId":"268","severity":1,"message":"279","line":21,"column":9,"nodeType":"270","messageId":"271","endLine":21,"endColumn":19},{"ruleId":"268","severity":1,"message":"280","line":1,"column":10,"nodeType":"270","messageId":"271","endLine":1,"endColumn":24},{"ruleId":"268","severity":1,"message":"281","line":3,"column":10,"nodeType":"270","messageId":"271","endLine":3,"endColumn":22},{"ruleId":"268","severity":1,"message":"282","line":13,"column":8,"nodeType":"270","messageId":"271","endLine":13,"endColumn":15},{"ruleId":"268","severity":1,"message":"274","line":15,"column":10,"nodeType":"270","messageId":"271","endLine":15,"endColumn":21},{"ruleId":"268","severity":1,"message":"269","line":16,"column":10,"nodeType":"270","messageId":"271","endLine":16,"endColumn":26},{"ruleId":"268","severity":1,"message":"283","line":78,"column":5,"nodeType":"270","messageId":"271","endLine":78,"endColumn":16},{"ruleId":"268","severity":1,"message":"284","line":6,"column":10,"nodeType":"270","messageId":"271","endLine":6,"endColumn":19},{"ruleId":"268","severity":1,"message":"285","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":17},{"ruleId":"264","replacedBy":"286"},{"ruleId":"266","replacedBy":"287"},{"ruleId":"268","severity":1,"message":"272","line":5,"column":22,"nodeType":"270","messageId":"271","endLine":5,"endColumn":26},{"ruleId":"268","severity":1,"message":"288","line":16,"column":29,"nodeType":"270","messageId":"271","endLine":16,"endColumn":42},{"ruleId":"268","severity":1,"message":"269","line":20,"column":10,"nodeType":"270","messageId":"271","endLine":20,"endColumn":26},{"ruleId":"268","severity":1,"message":"289","line":21,"column":10,"nodeType":"270","messageId":"271","endLine":21,"endColumn":18},{"ruleId":"268","severity":1,"message":"290","line":37,"column":17,"nodeType":"270","messageId":"271","endLine":37,"endColumn":24},{"ruleId":"268","severity":1,"message":"291","line":37,"column":26,"nodeType":"270","messageId":"271","endLine":37,"endColumn":31},{"ruleId":"268","severity":1,"message":"292","line":7,"column":10,"nodeType":"270","messageId":"271","endLine":7,"endColumn":20},{"ruleId":"268","severity":1,"message":"293","line":24,"column":8,"nodeType":"270","messageId":"271","endLine":24,"endColumn":19},{"ruleId":"268","severity":1,"message":"294","line":48,"column":9,"nodeType":"270","messageId":"271","endLine":48,"endColumn":15},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"@typescript-eslint/no-unused-vars","'selectUsersState' is defined but never used.","Identifier","unusedVar","'User' is defined but never used.","'usersSlice' is defined but never used.","'useSelector' is defined but never used.","'string' is defined but never used.","'selectBugsState' is defined but never used.","'UserState' is defined but never used.","'updateShorthandPropertyAssignment' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'RepeatOneSharp' is defined but never used.","'EmailPayload' is defined but never used.","'BugForm' is defined but never used.","'assignments' is assigned a value but never used.","'RootState' is defined but never used.","'demoCreds' is defined but never used.",["295"],["296"],"'useMediaQuery' is defined but never used.","'BugState' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'BugPayload' is defined but never used.","'SubjectIcon' is defined but never used.","'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]